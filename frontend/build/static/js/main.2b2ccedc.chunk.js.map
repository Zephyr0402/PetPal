{"version":3,"sources":["Services/backendURL.js","Services/userService.js","Layout/Header.js","AnimalList/AnimalThumbnail.js","AnimalList/AnimalList.js","AnimalList/Filters.js","AnimalList/UtilityView.js","Services/commentService.js","AnimalCard/CommentArea.js","AnimalCard/Comment.js","AnimalCard/Comments.js","AnimalCard/AnimalCard.js","AnimalMap/Map.js","Services/transactionService.js","Payment/CreditCardForm.js","Payment/StripeContainer.js","Payment/OrderConfirmation.js","Payment/Payment.js","Services/fetchData.js","Layout/Main.js","User/LoginForm.js","Services/postAnimalInfo.js","Services/utils.js","User/PostAnimalForm.js","User/SignUpForm.js","User/Uploader.js","User/UserInfo.js","User/PostedAnimals.js","User/TransactionHistory.js","User/UserInfoPage.js","User/ResetPwdForm.js","App.js","reportWebVitals.js","index.js"],"names":["backendURL","axios","defaults","withCredentials","login","username","password","a","fetch","method","body","JSON","stringify","headers","then","res","json","logout","get","data","register","name","email","code","verify","sendResetLink","resetPassword","token","getHeader","uuid","getUserInfo","updateUserInfo","userInfo","credentials","inputName","inputPNumber","inputCity","inputIntro","Header","props","useState","header","setHeader","optionsVisible","setOptionsVisible","useEffect","onLogout","message","error","content","duration","icon","InfoCircleTwoTone","twoToneColor","onClose","window","location","href","optionsOnNameClick","Item","to","pathname","state","key","danger","onClick","className","src","alt","border","width","undefined","title","shape","FormOutlined","type","overlay","onVisibleChange","visible","style","display","marginLeft","marginRight","avatar","DownOutlined","AnimalThumbnail","Meta","Card","setName","hoverable","cover","height","objectFit","image","setDisplay","index","description","price","AnimalList","animalInfos","setAnimalInfos","itemLayout","dataSource","renderItem","item","id","padding","KindFilter","thumbnails","document","getElementsByClassName","onKindChange","e","thumbnail","kind","toUpperCase","target","innerText","PriceFilter","min","max","range","setRange","curRange","setCurRange","sortedData","length","onSliderChange","defaultValue","value","bordered","size","formatter","replace","parser","onChange","LineOutlined","UtilityView","filter","setFilter","JSONarray","ascPrice","x","y","onFilterClick","direction","overflow","placeholder","allowClear","onKeyUp","console","log","counter","indexOf","bind","suffix","SearchOutlined","margin","fontSize","parse","sort","getComments","commentType","postComment","commentText","Date","LikeComment","ucid","DislikeComment","CommentArea","Form","useForm","form","setAvatar","commentInput","useRef","onFinish","values","resetFields","onSubmitFinish","onCommentSubmit","TextArea","ref","rows","maxWidth","resize","htmlType","SingleComment","cmtDetail","commentDetail","liked","setLiked","likes","setLikes","disliked","setDisliked","showCommentArea","setShowCommentArea","cancelLike","cancelDislike","actions","createElement","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","author","datetime","date","getFullYear","m","getMonth","d","getDate","h","getHours","minute","getMinutes","second","getSeconds","formatDate","time","replies","CommentCollection","comments","setComments","locale","emptyText","comment","map","reply","AnimalCard","userId","setUserId","thisCard","animalCardInfo","age","user","userAvatar","position","ArrowLeftOutlined","marginBottom","CommentOutlined","HeartOutlined","color","label","span","aid","setDisplayCheckout","confirm","ShoppingCartOutlined","mapStyles","aid2marker","GoogleApiWrapper","apiKey","activeMarker","setActiveMarker","marker","click","onMarkerClick","i","marker2aid","containerStyle","google","zoom","initialCenter","lat","lng","center","ele","address","TRANSACTION_STATUS","getTransactionHistory","Title","Typography","Text","backEndURL","CreditCardForm","errorMsg","setErrorMsg","isProcessing","setIsProcessing","sellerId","setSellerId","stripe","useStripe","elements","useElements","animalId","animal","Headers","status","handleSubmit","preventDefault","createPaymentMethod","card","getElement","CardElement","paymentMethod","payment","amount","setPaymentSuccess","text","transaction","buyerId","_id","timestamp","tag","result","setNewTransaction","animalStatus","err","level","onSubmit","options","iconStyle","hidePostalCode","base","iconColor","backgroundColor","invalid","complete","ev","CloseCircleTwoTone","stripeTestPromise","loadStripe","StripeContainer","Link","OrderConfirmation","CheckCircleTwoTone","newTransaction","orderNumber","toLocaleString","SmileTwoTone","Payment","selectedAnimal","paymentSuccess","CloseOutlined","fetchAnimalList","Main","displayCheckout","setMyDisplay","Sider","Content","LoginForm","emailInput","showResetModal","setShowResetModal","tailLayout","wrapperCol","offset","onShowModal","success","labelCol","onFinishFailed","errorInfo","place","Password","onCancel","onOk","current","postAnimalInfo","req","info","getPostedAnimals","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","PostAnimalForm","Option","Select","Input","setLocation","animalName","setAnimalName","animalAgeMonth","setAnimalAgeMonth","animalAgeYear","setAnimalAgeYear","dateFound","setDateFound","category","setCategory","setPrice","fileList","setFileList","setDescription","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","handlePostAnimal","alert","geocodeByAddress","results","getLatLng","geoInfo","beforeUpload","animalInfo","thumbUrl","resetInput","handlePreview","url","preview","originFileObj","substring","lastIndexOf","uploadButton","PlusOutlined","marginTop","event","Group","compact","noStyle","selectProps","dateString","prefix","listType","onPreview","footer","handleResetForm","SignUpForm","verModal","setVerModal","nameInput","passwordInput","codeInput","showVerModal","Uploader","rotate","action","hideUploadModal","UserInfo","setUUid","edit","setEdit","update","setUpdate","setInputName","inputMail","setInputMail","setInputPNumber","setInputCity","setInputIntro","upload","showUpload","showComment","phone","city","intro","enableEdit","textAlign","paddingRight","paddingTop","this","disabled","float","allowHalf","active","PostedAnimals","animalinfo","setanimalinfo","cardDisplay","xs","md","lg","xl","xxl","gutter","Column","Table","ColumnGroup","TransactionHistory","tdata","settdata","rowKey","record","expandable","expandedRowRender","dataIndex","render","Layout","withRouter","selectedKey","setSelectedKey","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","UserOutlined","SmileOutlined","TransactionOutlined","switchComponent","ResetPwdForm","onResetPassword","match","params","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b2ccedc.chunk.js","sourcesContent":["const backendURL = \"http://localhost:9999\";\n\nexport default backendURL;","import backendURL from './backendURL';\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport const login = async (username, password) => {\n   return await fetch('http://localhost:9999/api/login', {\n        method: 'POST',\n        body: JSON.stringify({\n            \"email\":username,\n            \"password\":password\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    }).then(res => res.json());\n}\n\nexport const logout = async (username, password) => {\n    return await axios.get(backendURL + '/api/logout')\n    .then(res => res.data);\n}\n\nexport const register = async (name, email, password, code) => {\n    return await fetch('http://localhost:9999/api/register', {\n        method: 'POST',\n        body: JSON.stringify({\n            \"name\":name,\n            \"email\":email,\n            \"password\":password,\n            \"code\" : code\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    }).then(res => res.json());\n}\n\nexport const verify = async (email) => {\n    return fetch('http://localhost:9999/api/auth', {\n        method: 'POST',\n        body: JSON.stringify({\n            \"email\":email\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    });\n}\n\nexport const sendResetLink = async (email) => {\n    return fetch('http://localhost:9999/api/reset_token',{\n        method: 'POST',\n        body: JSON.stringify({\n            \"email\":email\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    })\n}\n\nexport const resetPassword = async (token, password) => {\n    return await fetch('http://localhost:9999/api/reset_pwd/'+token, {\n        method: 'POST',\n        body: JSON.stringify({\n            \"password\" : password\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    }).then(res => res.json());\n}\n\nexport const getHeader = async ( uuid = \"\" ) => {\n    return await axios.get('http://localhost:9999/api/cur_user/'+uuid)\n        .then(res => res.data);\n}\n\nexport const getUserInfo = async () => {\n    return await axios.get('http://localhost:9999/api/cur_user/info')\n        .then(res => res.data);\n}\n\nexport const updateUserInfo = async (userInfo) => {\n    return await fetch(backendURL+'/api/cur_user/info/update', {\n        method: 'POST',\n        credentials:'include',\n        body: JSON.stringify({\n            \"name\": userInfo.inputName,\n            \"phone\": userInfo.inputPNumber,\n            \"city\": userInfo.inputCity,\n            \"intro\": userInfo.inputIntro,\n        }),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        }\n    })\n}","import React, { useEffect, useState } from 'react';\nimport {Button, Tooltip, Avatar, Typography, Dropdown, Menu, Divider, message, Alert} from 'antd';\nimport './Header.css';\nimport {Link, Redirect} from 'react-router-dom';\nimport { FormOutlined, DownOutlined, CheckCircleFilled, CheckCircleTwoTone, InfoCircleTwoTone} from '@ant-design/icons';\nimport { getHeader, getUserInfo, logout } from '../Services/userService';\n\nconst Header = (props) => {\n    const [header, setHeader] = useState({});\n    const [optionsVisible, setOptionsVisible] = useState(false);\n\n    useEffect(()=>{\n        getHeader()\n            .then(async res => {\n                if(typeof res.uuid === 'string'){\n                    await getUserInfo().\n                        then(\n                            res => setHeader(res)\n                        )\n                }\n            })\n    },[]);\n\n    const onLogout = async () => {\n        await logout().then(\n            (res) => message.error({\n                content: \"Log out successfully. You will be redirected to main page in 1 seconds\", \n                duration: 1, \n                icon: <InfoCircleTwoTone twoToneColor=\"#52c41a\"/>,\n                onClose: () => {\n                window.location.href = \"/\";\n            }\n            })\n        )\n        \n    }\n\n    const onMenuVisibleChange = () => {\n        setOptionsVisible(!optionsVisible);\n    }\n\n    var optionsOnNameClick = (\n        <Menu>\n          <Menu.Item>Logged in as <b>{header.name}</b></Menu.Item>\n          <Divider/>\n          <Menu.Item key = \"profile\"><Link to = {{pathname:'/user', state : { key:\"1\" }}}>My Profile</Link></Menu.Item>\n          <Menu.Item key=\"posts\"><Link to = {{pathname:'/user', state : { key:\"2\" }}}>My Posts</Link></Menu.Item>\n          <Menu.Item key=\"transactions\"><Link to = {{pathname:'/user', state : { key:\"3\" }}}>My Transactions</Link></Menu.Item>\n          <Divider/>\n          <Menu.Item key=\"logout\" danger onClick = {onLogout}>Log out</Menu.Item>\n        </Menu>\n      );\n\n    return (\n        <header className = \"header\">\n            <a href=\"http://localhost:3000/map\">\n                <img src=\"https://i.ibb.co/k3rqzWb/Petpal-logo.png\" alt=\"Petpal-logo\" border=\"0\" width={200}/>\n            </a>\n            {\n                header.name === undefined ?\n                    <span className = \"header-btns\">\n                        <Tooltip title = \"Post now!\">\n                            <Button danger shape=\"circle\" icon={<FormOutlined />} href = \"/post\"/>\n                        </Tooltip>\n                        <Link className = \"header-btn\" to = \"/login\">Log in</Link>\n                        <Button className = \"header-btn\" type = 'primary' href = \"/register\">Sign up</Button>\n                    </span>\n                :\n                    <span className = \"header-btns\">\n                        <Tooltip title = \"Post now!\">\n                            <Button danger shape=\"circle\" icon={<FormOutlined />} href = \"/post\"/>\n                        </Tooltip>\n                        <Dropdown\n                            overlay = {optionsOnNameClick}\n                            onVisibleChange = {onMenuVisibleChange}\n                            visible = {optionsVisible}\n                        >\n                            <div style = {{display:'inline'}}>\n                                <Avatar style = {{marginLeft:\"8px\", marginRight:\"8px\"}} src = {header.avatar}/><DownOutlined/>\n                            </div>\n                        </Dropdown>\n                    </span>\n            }\n        </header>\n    );\n};\n\nexport default Header;\n","import 'antd/dist/antd.css';\nimport React, { useState, useEffect } from 'react';\nimport './AnimalThumbnail.css';\nimport { Button, Card } from 'antd';\n\nconst AnimalThumbnail = (props) => {\n    const { Meta } = Card;\n    const [name, setName] = useState(props.content.name);\n\n    useEffect(() => {\n        setName(props.content.name);\n    }, [props.name]);\n\n    return (\n        <Card className=\"animal-thumbnail\" hoverable cover={<img alt=\"example\" style={{ height: \"100%\", objectFit: 'cover', width: 300 }} src={props.content.image} />} onClick={() => props.setDisplay(props.index)}>\n            <Meta\n                title={name}\n                description={props.content.price + ' CAD'}\n            />\n            <br />\n            <Button type=\"primary\" >View Info</Button>\n        </Card>\n    );\n}\n\n// class AnimalThumbnail extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             animalName: \"Animal Name\",\n//             animalDescription: \"Animal Description\",\n//         };\n//     }\n\n//     // Feed animal info\n//     changeState(animalName, animalDescription) {\n//         return;\n//     }\n\n//     render() {\n//         const { Meta } = Card;\n//         return (\n//             <Card className=\"animal-thumbnail\" hoverable cover={<img alt=\"example\" style={{ height: \"100%\", objectFit: 'cover', width: 300}} src={this.props.content.image} />} onClick = {() => this.props.setDisplay(this.props.content.id)}>\n//                 <Meta\n//                     title={this.props.content.name}\n//                     description={this.props.content.description}\n//                 />\n//                 <br/>\n//                 <Button type=\"primary\" >View Info</Button>\n//             </Card>\n//         )\n//     }\n// }\n\nexport default AnimalThumbnail;\n","import React, {useState, useEffect} from 'react';\nimport 'antd/dist/antd.css';\nimport { List } from 'antd';\nimport AnimalThumbnail from './AnimalThumbnail';\n\nconst AnimalList = (props) => {\n    const [animalInfos, setAnimalInfos] = useState(props.animalInfos);\n    \n    useEffect(() => {\n        setAnimalInfos(props.animalInfos);\n    }, [props.animalInfos]);\n\n    return (\n        <div>\n            <List style={{ width: \"100%\", height: 0 }}\n                itemLayout=\"horizontal\"\n                dataSource={animalInfos}\n                renderItem={(item, index) => (\n                    <List.Item className='animal-list-item' id={item.id} style={{ width: \"100%\", padding: 8 }}>\n                        <AnimalThumbnail content={item} index={index} setDisplay={props.setDisplay} />\n                    </List.Item>\n                )}\n            />\n        </div>\n    );\n}\n\nexport default AnimalList;","import React, { useEffect, useState } from 'react';\nimport {Slider, InputNumber, Button} from 'antd';\nimport { LineOutlined } from '@ant-design/icons';\nimport './Filter.css'\n\nexport const KindFilter = (props) => {\n    const [kind, setKind] = useState(\"none\");\n    const data = props.data;\n\n    useEffect(()=>{\n        return function cleanup(){\n            var thumbnails = document.getElementsByClassName('animal-list-item')\n\n            for(let thumbnail of thumbnails)\n                thumbnail.style.display = 'block';\n            }\n    },[]);\n\n    const onKindChange = (e) => {\n        var thumbnails = document.getElementsByClassName('animal-list-item')\n        var index = 0;\n        for (let thumbnail of thumbnails) {\n            if (data[index] === undefined) {\n                thumbnail.style.display = 'none';\n                continue;\n            }\n            if (data[index].kind.toUpperCase() === e.target.innerText.toUpperCase())\n                thumbnail.style.display = 'block';\n            else \n                thumbnail.style.display = 'none';\n            index++;\n        }\n    }\n\n    return(\n        <div className = \"filter-border\">\n            Kind:<br/>\n            <div>\n                <Button className = \"kind-filter-option\" shape=\"round\" onClick = {onKindChange}>Cat</Button>\n                <Button className = \"kind-filter-option\" shape=\"round\" onClick = {onKindChange}>Dog</Button>\n                <Button className = \"kind-filter-option\" shape=\"round\" onClick = {onKindChange}>Bird</Button>\n                <Button className = \"kind-filter-option\" shape=\"round\" onClick = {onKindChange}>Fish</Button>\n            </div>\n        </div>\n    )\n}\n\nexport const PriceFilter = (props) => {\n    const [range, setRange] = useState({min:0, max:100});\n    const [curRange, setCurRange] = useState({ min: 0, max: 100 });\n    const sortedData = props.sortedData;\n    const data = props.data;\n\n    useEffect(()=>{\n        setRange({\n            min: sortedData[0].price,\n            max: sortedData[sortedData.length-1].price\n        });\n        return function cleanup(){\n            var thumbnails = document.getElementsByClassName('animal-list-item')\n\n            for(let thumbnail of thumbnails)\n                thumbnail.style.display = 'block';\n            }\n    },[]);\n\n    useEffect(()=>{\n        setCurRange({\n            min: sortedData[0].price,\n            max: sortedData[sortedData.length-1].price\n        });\n    },[]);\n\n    const onRangeMinInputChange = (value) => {\n        onSliderChange([value,curRange.max])\n    }\n\n    const onRangeMaxInputChange = (value) => {\n        onSliderChange([curRange.min,value])\n    }\n\n    const onSliderChange = ([min, max]) => {\n        var thumbnails = document.getElementsByClassName('animal-list-item');\n        var index = 0;\n        for (let thumbnail of thumbnails) {\n            if (data[index] === undefined) {\n                thumbnail.style.display = 'none';\n                continue;\n            }\n            if(data[index].price >= min && data[index].price <= max)\n                thumbnail.style.display = 'block';\n            else \n                thumbnail.style.display = 'none';\n            index++;\n        }\n        setCurRange({\n            min: min,\n            max: max\n        })\n    }\n\n    return(\n        <div className = \"filter-border\">\n            Price Range:<br/>\n            <InputNumber \n                id = \"minPriceInput\" \n                min = {range.min} max = {curRange.max} defaultValue = {range.min} value = {curRange.min} \n                bordered = {false} size = 'large' \n                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                onChange = {onRangeMinInputChange}/>\n            <LineOutlined />\n            <InputNumber \n                id = \"maxPriceInput\" \n                min = {curRange.min} max = {range.max} defaultValue = {range.max} value = {curRange.max} \n                bordered = {false} size = 'large'\n                formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} parser={value => value.replace(/\\$\\s?|(,*)/g, '')} \n                onChange = {onRangeMaxInputChange}/>\n            <Slider range min = {range.min} max = {range.max} defaultValue={[range.min, range.max]} value = {[curRange.min, curRange.max]} onChange = {onSliderChange}/>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Input, Space, Button, AutoComplete, Select } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport AnimalList from './AnimalList';\nimport { PriceFilter, KindFilter } from './Filters';\nimport './UtilityView.css';\n\nconst UtilityView = (props) => {\n    const [filter, setFilter] = useState(-1);\n    const [animalInfos, setAnimalInfos] = useState(props.animalInfos);\n\n    useEffect(() => {\n        setAnimalInfos(props.animalInfos);\n    }, [props.animalInfos])\n\n    const ascPrice = (x, y) => {\n        return (x[\"price\"] > y[\"price\"]) ? 1 : -1;\n    }\n\n    const sort = (JSONarray) => {\n        return JSON.parse(JSON.stringify(JSONarray)).sort(ascPrice);\n    }\n\n    const onSearch = (e) => {\n        console.log(animalInfos);\n        var filter = e.target.value.toUpperCase();\n        var thumbnails = document.getElementsByClassName('animal-list-item')\n        if (animalInfos === undefined) {\n            return;\n        }\n        console.log(thumbnails);\n        let counter = -1;\n        for (let thumbnail of thumbnails) {\n            counter++;\n            if (animalInfos[counter] === undefined) {\n                console.log(\"Ignoring...\", thumbnail.id);\n                continue;\n            }\n            console.log(animalInfos[thumbnail.id]);\n            if (animalInfos[counter].name.toUpperCase().indexOf(filter) == -1 && filter != \"\") {\n                thumbnail.style.display = 'none';\n            }\n            else {\n                thumbnail.style.display = 'block';\n            }\n        }\n    }\n\n    const onFilterClick = (e) => {\n        if ((filter === 0 && e.target.innerText == \"Kind\") || (filter === 1 && e.target.innerText == \"Price\")) {\n            setFilter(-1);\n            return;\n        }\n        switch (e.target.innerText) {\n            case \"Kind\":\n                setFilter(0);\n                break;\n            case \"Price\":\n                setFilter(1);\n                break;\n        }\n    }\n\n    return (\n        <div className=\"animal-list\" style={{ height: '100%' }}>\n            <Space direction=\"vertical\" style={{ width: \"100%\", height: \"100%\", overflow: 'scroll', padding: 8 }}>\n                <Input\n                    placeholder=\" Search animal names, descriptions here...\"\n                    allowClear\n                    onKeyUp={onSearch.bind(this)}\n                    style={{ marginLeft: \"4px\", width: '96%', height: '30px', padding: 0 }}\n                    suffix={<SearchOutlined style={{ marginRight: \"5px\" }} />}\n                />\n                <div className=\"filterView\">\n                    <b style={{ margin: '2px', fontSize: '16px' }}>Filter:</b>\n                    <Button className=\"filter-type\" shape=\"round\" onClick={onFilterClick.bind(this)}>Kind</Button>\n                    <Button className=\"filter-type\" shape=\"round\" onClick={onFilterClick.bind(this)}>Price</Button>\n                </div>\n                {\n                    filter === 0 ?\n                        <KindFilter data={animalInfos} />\n                        : (\n                            filter === 1 ?\n                                <PriceFilter sortedData={sort(animalInfos)} data={animalInfos}/> : \"\"\n                        )\n                }\n                <AnimalList style={{ width: 'inherit' }} animalInfos={animalInfos} setDisplay={props.setDisplay}></AnimalList>\n            </Space>\n        </div>\n    );\n};\n\nexport default UtilityView;\n","import backendURL from './backendURL';\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport const getComments = async (commentType, src) => {\n    return axios.get(backendURL + \"/api/comment/\"+commentType+\"/\"+src)\n        .then(res => res.data);\n}\n\nexport const postComment = async (id, type, commentText) => {\n    return fetch(backendURL + \"/api/comment/\", {\n        method: 'POST',\n        body : JSON.stringify({\n            \"fcid\" : type === \"comment\" ? id : undefined,\n            \"uaid\" : type === \"animal\" ? id : undefined,\n            \"uuid\" : type === \"user\" ? id : undefined,\n            \"content\" : commentText,\n            \"time\" : new Date()\n        }),\n        headers : {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include'\n    }).then(res => res.json());\n}\n\nexport const LikeComment = async (ucid, type) => {\n    return await fetch(backendURL + \"/api/comment/like/\"+type+\"/\"+ucid, {\n        method: 'POST',\n       credentials: 'include'\n    }).then(res => res.json());\n}\n\nexport const DislikeComment = async (ucid, type) => {\n    return await fetch(backendURL + \"/api/comment/dislike/\"+type+\"/\"+ucid, {\n        method: 'POST',\n        credentials: 'include'\n    }).then(res => res.json());\n}","import { Input, Form, Button, Avatar, Comment } from 'antd'\nimport React,{useEffect, useRef, useState} from 'react'\nimport { getUserInfo } from '../Services/userService';\n\nexport const CommentArea = (props) => {\n    const [form] = Form.useForm();\n    const [avatar, setAvatar] = useState(\"\");\n\n    const commentInput = useRef(\"\");\n\n    useEffect(() => {\n      getUserInfo().then(\n        res => setAvatar(res.avatar)\n      )\n    },[])\n\n    const onCommentSubmit = (values) => {\n        const commentText = values.commentText;\n        form.resetFields();\n        props.onSubmitFinish(false);\n        props.onCommentSubmit(props.id, props.type, commentText);\n    }\n\n\n\n    return(\n        <Comment\n          avatar={\n            <Avatar\n              src={avatar}\n              alt=\"Han Solo\"\n            />\n          }\n          content={\n            <Form\n                form = {form}\n                onFinish = {onCommentSubmit}\n            >\n                <Form.Item name=\"commentText\">\n                    <Input.TextArea ref = {commentInput} id = \"comment-text\" rows={3} style = {{maxWidth:'90%', resize:'none'}}/>\n                </Form.Item>\n                <Form.Item>\n                    <Button htmlType=\"submit\" type=\"primary\" >\n                        Add Comment\n                    </Button>\n                </Form.Item>\n            </Form>\n          }\n        />\n\n    )\n}","import React , {createElement,useEffect,useState} from 'react';\nimport { Comment, Tooltip, Avatar, Divider } from 'antd';\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons';\nimport {LikeComment, DislikeComment} from '../Services/commentService'\nimport {CommentArea} from './CommentArea'\n\nconst SingleComment = (props) => {\n    const cmtDetail = props.commentDetail;\n\n    const [liked, setLiked] = useState(false);\n    const [likes, setLikes] = useState(cmtDetail.likes.length)\n    const [disliked, setDisliked] = useState(false);\n\n    const [showCommentArea,setShowCommentArea] = useState(false)\n\n    const like = () => {\n      setLiked(true);\n      setLikes(likes +1);\n      setDisliked(false);\n      console.log(cmtDetail.ucid);\n      LikeComment(cmtDetail.ucid,'set');\n    }\n\n    const cancelLike = () => {\n      setLiked(false);\n      setLikes(likes - 1);\n      LikeComment(cmtDetail.ucid,'cancel');\n    }\n\n    const dislike = () => {\n      setDisliked(true);\n      DislikeComment(cmtDetail.ucid, 'set');\n    }\n\n    const cancelDislike = () => {\n      setDisliked(false);\n      DislikeComment(cmtDetail.ucid, 'cancel');\n    }\n\n    const onLike = () => {\n      if(!liked){\n        like();\n        if(disliked) cancelDislike();\n      }\n      else{\n        cancelLike();\n      }\n    };\n  \n    const onDislike = () => {\n      if(!disliked){\n        dislike();\n        if(liked) cancelLike();\n      }\n      else{\n        cancelDislike();\n      }\n    };\n\n    const showComment = () => {\n      setShowCommentArea(!showCommentArea);\n    }\n  \n    const formatDate = (date) => {\n      date = new Date(date)\n      var y = date.getFullYear();  \n      var m = date.getMonth() + 1;  \n      m = m < 10 ? ('0' + m) : m;  \n      var d = date.getDate();  \n      d = d < 10 ? ('0' + d) : d;  \n      var h = date.getHours();  \n      var minute = date.getMinutes();  \n      minute = minute < 10 ? ('0' + minute) : minute; \n      var second= date.getSeconds();  \n      second = minute < 10 ? ('0' + second) : second;  \n      return y + '-' + m + '-' + d+' '+h+':'+minute+':'+ second;  \n    }\n\n    const actions = [\n      <Tooltip key=\"comment-basic-like\" title=\"Like\">\n        <span onClick={onLike}>\n          {createElement(liked ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n        </span>\n      </Tooltip>,\n      <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n        <span onClick={onDislike}>\n          {createElement(disliked ? DislikeFilled : DislikeOutlined)}\n        </span>\n      </Tooltip>,\n      <span key=\"comment-basic-reply-to\" onClick = {showComment}>Reply to</span>,\n    ];\n\n    return(\n        <Comment\n            actions={actions}\n            author={<a>{cmtDetail.name}</a>}\n            avatar={\n                <Avatar\n                src={cmtDetail.avatar}\n                alt=\"Username loading...\"\n                />\n            }\n            content={\n                <p>\n                  {cmtDetail.content}\n                </p>\n            }\n            datetime={\n                <span>{formatDate(cmtDetail.time)}</span>\n            }\n        >\n          {props.replies}\n          {\n            showCommentArea ? \n            <CommentArea id = {props.id} type = {props.type} onCommentSubmit = {props.onCommentSubmit} onSubmitFinish = {setShowCommentArea}/> : \"\"}\n        </Comment>\n    )\n}\n\nexport default SingleComment;","import React, { createElement, useEffect, useState } from 'react';\nimport SingleComment from './Comment'\nimport './Comments.css';\nimport {getComments, postComment} from '../Services/commentService'\nimport Header from '../Layout/Header'\nimport {List, Comment, Avatar, Divider} from 'antd'\nimport { CommentArea } from './CommentArea';\n\nconst CommentCollection = (props) => {\n\n  const [comments, setComments] = useState([]);\n\n  useEffect(async () => {\n    await getComments(props.commentType, props.id).then(\n      res => setComments(res)\n    )\n  }, [])\n\n  const onCommentSubmit = async (id, type, commentText) => {\n    postComment(id, type, commentText).then(\n      await getComments(props.commentType, props.id).then(\n         res => setComments(res))\n    )\n  }\n\n  return (\n    <div className=\"comments-wrapper\">\n      <CommentArea id = {props.id} type = {props.commentType} onCommentSubmit = {onCommentSubmit} onSubmitFinish = {() => {}}/>\n      <List\n        dataSource = {comments}\n        header={`${comments.length} ${comments.length > 1 ? 'comments' : 'comment'}`}\n        itemLayout=\"horizontal\"\n        locale = {{emptyText: \" \"}}\n        renderItem = {\n          comment =>\n          <>\n            <SingleComment\n              commentDetail={comment}\n              onCommentSubmit = {onCommentSubmit}\n              id = {comment.ucid}\n              type = \"comment\"\n              replies = {comment.replies.map(reply =>\n                <SingleComment\n                  commentDetail = {reply}\n                  onCommentSubmit = {onCommentSubmit}\n                  id = {comment.ucid}\n                  type = \"comment\"\n                />\n              )}\n            />\n            <Divider />\n            </>\n        }\n      />\n    </div>\n  );\n};\n\nexport default CommentCollection;\n","import React, { useState,useEffect } from 'react';\nimport { HeartOutlined, ShoppingCartOutlined, CommentOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport {Card, Avatar, Descriptions, Button} from 'antd';\nimport CommentCollection from './Comments';\nimport './AnimalCard.css';\nimport {getHeader} from \"../Services/userService\";\nconst { Meta } = Card;\n\nconst AnimalCard = (props) => {\n    const [userId, setUserId] = useState(null);\n\n    useEffect(() => {\n        getHeader()\n        .then(async res => {\n            setUserId(res.uuid);\n        });\n    }, [])\n\n    let thisCard = props.animalCardInfo;\n    if (thisCard === undefined) {\n        thisCard = {\n            name: 'None',\n            image: '/image-not-found.png',\n            age: 0,\n            price: 0,\n            user: 'None',\n            userAvatar: 'None',\n            kind: 'None',\n            description: 'None'\n        };\n    }\n\n    const showLoginAlert = () => {\n        if (window.confirm(\"Please log in to make the payment.\")) {\n            window.location.href=\"/login\";\n        }\n    };\n\n    return(\n        <div>\n            <div style = {{height:'100%', overflow:'auto', position:'absolute'}}>\n                <div className=\"card-header\">\n                    <Button type = 'text' onClick = {() => props.setDisplay(-1)}><ArrowLeftOutlined/></Button>\n                    <Meta\n                        avatar={<Avatar src={thisCard.userAvatar} />}\n                        title={thisCard.user}\n                    />\n                </div>\n                <Card\n                    style={{ width: '100%', marginBottom:\"20px\" }}\n                    cover={\n                        <img\n                            alt=\"example\"\n                            src={thisCard.image}\n                        />\n                    }\n                    actions={[\n                        <CommentOutlined />,\n                        <HeartOutlined />,\n                    ]}\n                >\n\n                    <hr color = \"white\"/>\n                    <hr color = \"white\"/>\n                    <Descriptions bordered>\n                        <Descriptions.Item label = \"Name\" span={3}>{thisCard.name}</Descriptions.Item>\n                        <Descriptions.Item label = \"Age\" span={3}>{thisCard.age}</Descriptions.Item>\n                        <Descriptions.Item label = \"Kind\" span={3}>{thisCard.kind}</Descriptions.Item>\n                        <Descriptions.Item label = \"Street\" span={1.5}>3338 Webber Lane</Descriptions.Item>\n                        <Descriptions.Item label = \"City\" span = {1.5}>Vancouver</Descriptions.Item>\n                        <Descriptions.Item label = \"Price (CAD)\" span={3}>{thisCard.price}</Descriptions.Item>\n                        <Descriptions.Item label=\"Description\">{thisCard.description}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n                <CommentCollection commentType = \"animal\" id = {props.aid}/>\n                <div className=\"shopping-cart-wrapper\">\n                    <span className=\"cta-button-round\" onClick={() => userId !== null && userId !== undefined ? props.setDisplayCheckout(true) : showLoginAlert()}>\n                        <ShoppingCartOutlined />\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AnimalCard;\n","import React, { useEffect, useState } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\nconst mapStyles = {\n    position: 'absolute',\n    width: '62%',\n    height: '92%'\n};\n\nvar aid2marker = [];\n\nconst AnimalMap = (props) => {\n   // const [showInfoWindow, setShowInfoWindow] = useState(false);\n    const [activeMarker, setActiveMarker] = useState({});\n    const data = props.animalCardInfo;\n    console.log(\"aid is:\", props.aid);\n\n    useEffect(() => {\n        if (props.aid > -1) {\n            aid2marker[props.aid].marker.click();\n        }\n    }, []);\n\n    const marker2aid = (marker) => {\n        for (let i in aid2marker) {\n            if(aid2marker[i].props.position === marker.position){\n                return i;\n            }\n        }\n    }\n\n    const onMarkerClick = (marker) => {\n        props.setDisplay(marker2aid(marker));\n        //setShowInfoWindow(true);\n        setActiveMarker(marker);\n    } \n\n    const onInfoWindowClose = (props) => {\n        // if(showInfoWindow){\n        //     setShowInfoWindow(false);\n        // }\n    }\n\n    return(\n        <Map\n            containerStyle = {mapStyles}\n            google={props.google}\n            zoom={14}\n            initialCenter={{lat:49.26127572955761, lng:-123.23869115661624}}\n            center = {activeMarker.position}\n        >\n            {data.map((ele,index) =>\n                <Marker\n                    name = {ele.name}\n                    position = {ele.position}\n                    onClick={onMarkerClick}\n                    ref = {(marker) => aid2marker[index] = marker}\n                />\n            )}\n            <InfoWindow\n                marker={\n                    props.aid > -1 ?\n                    aid2marker[props.aid].marker : null\n                }\n                visible={props.aid > -1}\n                onClose={onInfoWindowClose}\n            >\n                <div className=\"hello\">\n                    <h3>{props.aid > -1 ? data[props.aid].name : \"\"}</h3>\n                    <pre>{props.aid > -1 ? data[props.aid].address : \"\"}</pre>\n                </div>\n            </InfoWindow>\n        </Map>\n    )\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDnMJlodY_mrnG1k--Ol-Ocm9bWgaJF18k'})(AnimalMap);\n","import backendURL from \"./backendURL\";\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nconst millisecInAndHour = 3600000;\nconst pendingStatusTimeLimit = 2;\n\nexport const TRANSACTION_STATUS = {\n    COMPLETE: \"complete\",\n    PENDING: \"pending\",\n    CANCELED: \"canceled\"\n};\n\nexport const fetchTransactionList = async () => {\n    const res = await fetch(backendURL + '/api/transaction', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    });\n    return res.json();\n};\n\n\n//Update transaction status to \"complete\" after 2 hours\n//Should be called in Main's useEffect so the status is immediately updated when the site is loading\nexport const updateTransactionStatusToCompleted = async () => {\n\n   await fetch(backendURL + '/api/transaction', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n   }\n    })\n    .then(res => res.json())\n    .then(data => {\n        data.map(d => {\n            if((new Date() - new Date(d.timestamp))/millisecInAndHour > pendingStatusTimeLimit && d.status.trim() === TRANSACTION_STATUS.PENDING){\n                const transaction = {\n                    id: d._id,\n                    status: TRANSACTION_STATUS.COMPLETE\n                };\n\n                fetch(backendURL + \"/api/transaction/update_status\", {\n                    method: \"PATCH\",\n                    headers: new Headers({\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify(transaction)\n                }).then(res => {\n                    if(res.status === 200) {\n                        console.log(\"transaction status successfully updated\");\n                    }else if(res.status >= 400){\n                        console.log(\"transaction status fail to updated\");\n                    }\n                });\n            }\n        })\n    });\n};\n\nexport const getTransactionHistory = async () => {\n    return await axios.get(backendURL+'/api/transaction/uuid')\n        .then(res => res.data);\n}\n","import React, {useEffect, useState} from 'react';\nimport {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\nimport {Button, Typography} from \"antd\";\nimport { CloseCircleTwoTone } from '@ant-design/icons';\nimport {getHeader} from \"../Services/userService\";\nimport {TRANSACTION_STATUS} from \"../Services/transactionService\"\n\nconst { Title, Text } = Typography;\nconst backEndURL = \"http://localhost:9999/\";\n\nconst CreditCardForm = (props) => {\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [userId, setUserId] = useState(null);\n    const [sellerId, setSellerId] = useState(null);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    useEffect(() => {\n        const animalId = { id : props.animal.id };\n\n        fetch( backEndURL + \"animalinfo/userinfo\", {\n            method: \"POST\",\n            headers: new Headers({\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify(animalId)\n        }).then(res => {\n            if(res.status === 200) {\n                return res.json();\n            }else if(res.status >= 400){\n                console.log(\"cannot get user info\");\n            }\n        }).then(data => {\n            if(data) {\n                setSellerId(data.uuid);\n            }\n        });\n    },[]);\n\n    getHeader()\n        .then(async res => {\n            setUserId(res.uuid);\n        });\n\n    const CARD_OPTIONS = {\n        iconStyle: \"solid\",\n        hidePostalCode: true,\n        style: {\n            base: {\n                iconColor: \"#212121\",\n                color: \"#06070f\",\n                backgroundColor: \"transparent\",\n                fontSize: \"14px\",\n            },\n            invalid: {\n                iconColor: \"#ff4d4f\",\n                color: \"#ff4d4f\",\n            },\n            complete: {\n                iconColor: \"#00b8b0\"\n            }\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        });\n\n        if(!error) {\n            try {\n                setIsProcessing(true);\n                const {id} = paymentMethod;\n\n                const payment = {\n                    amount: props.animal.price * 100,\n                    id\n                };\n\n                //Post Stripe payment\n                fetch(backEndURL + \"api/payment\", {\n                    method: \"POST\",\n                    headers: new Headers({\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify(payment)\n                }).then(res => {\n                    if(res.status === 200) {\n                        props.setPaymentSuccess(true);\n                    }else if(res.status >= 400){\n                        res.text().then(text => setErrorMsg(text));\n                    }\n                });\n\n                const transaction = {\n                    buyerId: userId,\n                    sellerId: sellerId,\n                    animalId: props.animal._id,\n                    timestamp: new Date(),\n                    price: props.animal.price,\n                    status: TRANSACTION_STATUS.PENDING,\n                    tag: props.animal.kind,\n                };\n\n                //Post transaction\n                fetch(backEndURL + \"api/transaction/add\", {\n                    method: \"POST\",\n                    headers: new Headers({\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify(transaction)\n                }).then(res => {\n                    if(res.status === 200) {\n                        res.json().then(result => {\n                            props.setNewTransaction(result.data);\n                        });\n                    }else if(res.status >= 400){\n                        res.text().then(text => setErrorMsg(text));\n                    }\n                });\n\n                const animalStatus = { id : props.animal.id, status: \"sold\" };\n                fetch(backEndURL + \"animalinfo/changestatus\", {\n                    method: \"POST\",\n                    headers: new Headers({\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify(animalStatus)\n                }).then(res => {\n                    if(res.status === 200) {\n                        console.log(\"animal status successfully updated\");\n                    }else if(res.status >= 400){\n                        console.log(\"Fail to update animal status\");\n                    }\n                });\n\n            }catch (err) {\n                setErrorMsg(err.message);\n            }\n        }else {\n            setErrorMsg(error.message);\n        }\n    };\n\n    const handleOnCardInputChange = (ev) => {\n        ev.error ? setErrorMsg(ev.error.message) : setErrorMsg();\n    };\n\n\n    return (\n        <div className=\"credit-card-form\">\n            <Title level={2} className=\"payment-summary\"><span>Payment for {props.animal.name}</span><span>${props.animal.price}</span></Title>\n            <form onSubmit={handleSubmit}>\n                <h3>Please enter your valid credit card</h3>\n                <fieldset className=\"form-group\">\n                    <div className=\"form-row\">\n                        <CardElement options = {CARD_OPTIONS} onChange={handleOnCardInputChange}/>\n                    </div>\n                </fieldset>\n                {isProcessing ?\n                    <Text >Processing Payment</Text > :\n                    <Button type=\"primary\" htmlType=\"submit\">Make Payment</Button>\n                }\n\n            </form>\n            <div className={errorMsg === \"\" || errorMsg === undefined ? \"error-msg hidden\" : \"error-msg\"}>\n                <CloseCircleTwoTone twoToneColor=\"#ff4d4f\"/>\n                <Text type=\"danger\"> {errorMsg}</Text>\n            </div>\n        </div>\n    )\n};\n\nexport default CreditCardForm;\n","import React from 'react';\nimport {Elements} from \"@stripe/react-stripe-js\";\nimport {loadStripe} from \"@stripe/stripe-js/pure\";\nimport CreditCardForm from \"./CreditCardForm\";\n\nconst PUBLIC_KEY = \"pk_test_51J2f66JoWtlpotrESG51Kl1u0CjSHCLPwdIliNtHh5WGX3aGwGupHt8yXZsFt1VcQ6fZeUeZQgEEP0vBuKg7QXVj00M3IuU3JR\";\n\n//synchronously loads the Stripe.js script and initializes a Stripe object\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\n\nconst StripeContainer = (props) => {\n    return (\n        <Elements stripe={stripeTestPromise}>\n            <CreditCardForm animal={props.animal} setPaymentSuccess={props.setPaymentSuccess} setNewTransaction={props.setNewTransaction}/>\n        </Elements>\n    )\n};\n\nexport default StripeContainer;\n","import React from 'react';\nimport {SmileTwoTone, CheckCircleTwoTone} from \"@ant-design/icons\";\nimport {Typography} from \"antd\";\n\nconst { Title, Text, Link } = Typography;\n\nfunction OrderConfirmation(props) {\n\n    return (\n        <div className=\"order-confirmation\">\n            <CheckCircleTwoTone twoToneColor=\"#00b8b0\" />\n            <Title level={3}>Successful Payment</Title>\n            <div className=\"order-info\">\n                <Title level={4}>Order Number: {props.newTransaction.orderNumber}</Title>\n                <Text>{new Date().toLocaleString('en-CA')}</Text>\n                <hr/>\n                <Title level={4} className=\"payment-summary\"><span>{props.animal.name}</span><span>${props.animal.price}</span></Title>\n            </div>\n            <div className=\"thank-you-message\">\n                <Title level={3}>Thank You!!!</Title>\n                <Text>{props.animal.name} is excited to see you.</Text>\n                <Text>Have a lovely day <SmileTwoTone /></Text>\n            </div>\n\n            <Link href=\"http://localhost:3000/user\" className=\"link-block\">\n                View your order\n            </Link>\n        </div>\n    )\n}\n\nexport default OrderConfirmation;\n","import React, {useState} from 'react';\nimport {Avatar, Button, Card} from \"antd\";\nimport {CloseOutlined} from \"@ant-design/icons\";\nimport StripeContainer from \"./StripeContainer\";\nimport './Payment.css'\nimport OrderConfirmation from \"./OrderConfirmation\";\n\nconst { Meta } = Card;\n\nconst Payment = (props) => {\n    const selectedAnimal = props.animalInfos[props.aid];\n\n    const [paymentSuccess, setPaymentSuccess] = useState(false);\n    const [newTransaction, setNewTransaction] = useState(null);\n\n    const setAllDisplayValues = () => {\n        if(paymentSuccess) {\n            props.setDisplay(-1);\n        }\n\n        props.setDisplayCheckout(false);\n\n    };\n\n\n    return (\n        <div className=\"payment-wrapper\">\n            <div className=\"card-header\">\n                {/* If payment is successfully process, the back button should take user to home page, otherwise\n                 take user to animal info*/}\n                <Button type = 'text' onClick = {setAllDisplayValues}><CloseOutlined /></Button>\n                <Meta\n                    avatar={<Avatar src={selectedAnimal.userAvatar} />}\n                    title={selectedAnimal.user}\n                />\n            </div>\n            <Card\n                style={{ width: '100%' }}\n                cover={\n                    <img\n                        alt=\"example\"\n                        src={selectedAnimal.image}\n                    />\n                }\n            >\n                {!paymentSuccess ?\n                    <StripeContainer animal={selectedAnimal} setPaymentSuccess={setPaymentSuccess} setNewTransaction={setNewTransaction}/> :\n                    <OrderConfirmation animal={selectedAnimal} newTransaction={newTransaction}/>\n                }\n            </Card>\n        </div>\n    )\n};\n\nexport default Payment;\n","import backendURL from './backendURL';\n\nexport const fetchAnimalList = async () => {\n    const res = await fetch(backendURL + '/animalInfo', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    })\n    return res.json();\n}\n\nconst fetchAnimalListByKind = (kind) => {\n    const data = { 'kind': kind };\n    fetch(backendURL + '/animalInfo/kind', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => {\n        return response.json();\n    })\n}\n\nconst fetchAnimalListByCost = (costMin, costMax) => {\n    const data = { 'costMin': costMin, 'costMax': costMax };\n    fetch(backendURL + '/animalInfo/cost', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => {\n        return response.json();\n    })\n}\n","import React, { useState, useEffect } from 'react';\nimport {Layout} from 'antd';\nimport Header from './Header';\nimport UtilityView from '../AnimalList/UtilityView';\nimport AnimalCard from '../AnimalCard/AnimalCard'\nimport AnimalMap from '../AnimalMap/Map';\nimport Payment from \"../Payment/Payment\";\nimport { fetchAnimalList } from '../Services/fetchData';\n\nconst Main = (props) => {\n    const [display, setDisplay] = useState(-1);\n    const [displayCheckout, setDisplayCheckout] = useState(false);\n    const [animalInfos, setAnimalInfos] = useState([]);\n\n    const setMyDisplay = (e) => {\n        setDisplay(e);\n    }\n\n    useEffect(() => {\n        // fetch animal info from backend\n        fetchAnimalList().then(res => {\n            console.log(\"fetchAnimalList\", res);\n            setAnimalInfos(res);\n            console.log(typeof (animalInfos));\n        });\n    }, [display]);\n\n    return(\n        <Layout>\n            <Header/>\n            <Layout>\n                <Layout.Sider width = \"38%\" style = {{backgroundColor:'white'}}>\n                    {  display === -1 ?\n                        <UtilityView animalInfos={ animalInfos } setDisplay = {setMyDisplay}/> :\n                        displayCheckout ?\n                            <Payment aid={display} setDisplay = {setMyDisplay} setDisplayCheckout={setDisplayCheckout} animalInfos={animalInfos}/> :\n                            <AnimalCard aid={display} animalCardInfo={ animalInfos[display] } setDisplay = {setMyDisplay} setDisplayCheckout={setDisplayCheckout}/> }\n                </Layout.Sider>\n                <Layout>\n                    <Layout.Content>\n                        <AnimalMap aid={display} animalCardInfo={animalInfos} setDisplay = {setMyDisplay}/>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default Main;\n","import React, {useRef, useState} from 'react';\nimport './forms.css';\nimport { Form, Input, Button, Modal, message } from 'antd';\nimport { getHeader, login , sendResetLink} from '../Services/userService';\nimport { InfoCircleTwoTone} from '@ant-design/icons'\nimport Header from '../Layout/Header'\n\nconst LoginForm = (props) => {\n\n    const emailInput = useRef(\"\");\n    const [showResetModal, setShowResetModal] = useState(false);\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const onShowModal = () => {\n        setShowResetModal(!showResetModal);\n    }\n\n    const onFinish = async (values) => {\n        await login(values.email, values.password)\n        .then(\n            async (res) => {\n                await getHeader(res.uuid).then(\n                    () =>{ \n                        if(res.success){\n                            message.error({\n                                content: res.message, \n                                duration: 2, \n                                icon: <InfoCircleTwoTone twoToneColor = \"#52c41a\"/>,\n                                onClose: () => {\n                                    window.location.href = '/';\n                                 }\n                            })\n                        }\n                        else{\n                            message.error({\n                                content: res.message, \n                                duration: 3\n                            })\n                        }\n                    }\n                );\n            }\n        )\n    };\n\n    const onResetLinkSent = () => {\n        sendResetLink(emailInput.current.state.value);\n        onShowModal();\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <div>\n            <Header/>\n            <div className=\"form_container\">\n                <div id=\"login_form_wrapper\">\n                    <h1 className=\"form_title\">Log in</h1>\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                            <Form.Item\n                                label=\"Email\"\n                                name=\"email\"\n                                place\n                            >\n                                <Input />\n                            </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                    \n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                            <a className=\"login-form-forgot\" onClick = {onShowModal}>\n                                Forgot password\n                            </a>\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            New user? <a href=\"/register\"> Sign up here! </a>\n                        </Form.Item>\n\n                        <Modal title=\"Reset Password\" visible={showResetModal}\n                            onCancel = {onShowModal}\n                            onOk = {onResetLinkSent}\n                        >\n                            <p>Please input your email here:</p>\n                            <Input ref = {emailInput}/>\n                            <p>After you submit, an confirmation email will be sent to your email address. Please follow instructions in it</p> \n                        </Modal>\n\n                    </Form>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default LoginForm;\n","import backendURL from './backendURL';\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nexport const postAnimalInfo = async (req) => {\n    const info = await fetch(backendURL + '/animalInfo/post', {\n        method: 'POST',\n        body: JSON.stringify(req),\n        headers: new Headers({\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\",\n        })\n    });\n    console.log(info);\n}\n\nexport const getPostedAnimals = async () => {\n    return await axios.get(backendURL+'/animalInfo/uuid')\n        .then(res => res.data);\n}","export const getBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}","import React, { useState } from 'react';\nimport './forms.css';\nimport GooglePlacesAutocomplete from 'react-google-places-autocomplete';\nimport { Button, Form, Input, InputNumber, DatePicker, Select, message} from 'antd';\nimport axios from 'axios';\nimport { Upload, Modal } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport Header from \"../Layout/Header\";\nimport { getUserInfo } from '../Services/userService';\nimport { postAnimalInfo } from '../Services/postAnimalInfo';\nimport { getBase64 } from '../Services/utils';\nimport { geocodeByAddress, getLatLng } from 'react-google-places-autocomplete';\n\naxios.defaults.withCredentials = true;\n\nfunction PostAnimalForm() {\n\n    const { Option } = Select;\n    const { TextArea } = Input;\n    const [location, setLocation] = useState(null);\n    const [animalName, setAnimalName] = useState(null);\n    const [animalAgeMonth, setAnimalAgeMonth] = useState(null);\n    const [animalAgeYear, setAnimalAgeYear] = useState(null);\n    const [dateFound, setDateFound] = useState(null);\n    const [category, setCategory] = useState(null);\n    const [price, setPrice] = useState(null);\n    const [fileList, setFileList] = useState([]);\n    const [description, setDescription] = useState(null);\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const handlePostAnimal = async (e) => {\n        e.preventDefault();\n        //TODO: replace with actual handlePostAnimal functionality\n        console.log(\"handlePostAnimal\");\n\n        if (category === null || location.value.description === undefined || animalAgeYear === null || animalAgeMonth === null || dateFound === null || description === null || category === null || animalName === null || price === null) {\n            window.alert('Have empty field!');\n            return;\n        }\n\n        const address = location.value.description;\n\n        // get current user's info\n        const userInfo = await getUserInfo().then(\n            res => {\n                return res;\n            }\n        );\n\n        console.log(userInfo);\n\n        if (userInfo.message !== undefined) {\n            window.alert('Not login, redirecting...');\n            window.location.href = '/login';\n        }\n        \n        // get GPS coordinates from address\n        const geoInfo = await geocodeByAddress(address)\n            .then(results => getLatLng(results[0]))\n            .then(({ lat, lng }) => {\n                console.log('Successfully got latitude and longitude', { lat, lng });\n                let info = { lat: lat, lng: lng };\n                return info;\n            }\n        );\n\n        if (geoInfo.lat === undefined || geoInfo.lng === undefined) {\n            window.alert('Cannot get GPS coordinates!');\n            return;\n        }\n\n        if (fileList.fileList === undefined || fileList.fileList.length <= 0) {\n            window.alert('You should at least upload one image!');\n            return;\n        } else {\n            for (let i = 0; i < fileList.fileList.length; i++) {\n                if (!beforeUpload(fileList.fileList[i])) {\n                    let message = \"Number \" + i + \" is not a JPG/PNG file!\";\n                    window.alert(message);\n                    return;\n                }\n            }\n        }\n        \n        const animalInfo = {\n            \"id\": \"\",\n            \"name\": animalName,\n            \"address\": address,\n            \"animalAgeYear\": animalAgeYear,\n            \"animalAgeMonth\": animalAgeMonth,\n            \"dateFound\": dateFound,\n            \"kind\": category,\n            \"price\": price,\n            \"description\": description,\n            \"image\": fileList.fileList[0].thumbUrl,\n            \"userinfo\": userInfo._id,\n            \"position\": {\n                \"lat\": geoInfo.lat,\n                \"lng\": geoInfo.lng,\n            }\n        };\n\n        console.log(animalInfo);\n\n        const req = {\n            \"animalinfo\": animalInfo,\n            \"userUUID\": userInfo.uuid\n        }\n        \n        await postAnimalInfo(req);\n        resetInput();\n        alert('Posted!');\n        \n        window.location.href = '/';\n    };\n\n    const handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewVisible(true);\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n        setPreviewImage(file.url || file.preview);\n    };\n\n    const handleResetForm = (e) => {\n        e.preventDefault();\n        resetInput();\n    };\n\n    const handleSelectBoxChange = (data) => {\n        setCategory(data);\n    }\n\n    const resetInput = () => {\n        //TODO: replace with actual resetInput functionality\n        console.log(\"resetInput\");\n    };\n\n    const onDateChange = (date, dateString) => {\n        //TODO: replace with actual onDateChange functionality\n        console.log('onDateChange', dateString);\n        setDateFound(dateString);\n    };\n\n    const beforeUpload = (file) => {\n        console.log(file);\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n            return false;\n        }\n        return true;\n    };\n\n    const handleChange = ({ fileList }) => { setFileList({ fileList }) };\n\n    const handleCancel = () => { setPreviewVisible(false) };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n\n    return (\n        <div>\n            <Header/>\n            <div className=\"form_container\">\n            <div id=\"post_animal_form_wrapper\">\n                <h1 className=\"form_title\">Post New Animal</h1>\n                <Form {...layout}>\n                    <Form.Item\n                        label=\"Animal Name\"\n                        name=\"animal_name_input\"\n                    >\n                        <Input placeholder=\"Please enter animal name\" onChange={event => setAnimalName(event.target.value)}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Age\"\n                    >\n                        <Input.Group compact>\n                            <Form.Item\n                                name={['age', 'years']}\n                                noStyle\n                            >\n                                <InputNumber\n                                    placeholder=\"years\"\n                                    min={0}\n                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                                    onChange={event => setAnimalAgeYear(event)}\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                name={['age', 'months']}\n                                noStyle\n                            >\n                                <InputNumber\n                                    placeholder=\"months\"\n                                    min={0}\n                                    formatter={value => `${value}`}\n                                    onChange={event => setAnimalAgeMonth(event)}\n                                />\n                            </Form.Item>\n                        </Input.Group>\n                    </Form.Item>\n\n                    <Form.Item label=\"Location\">\n                        <GooglePlacesAutocomplete\n                            apiKey=\"AIzaSyDnMJlodY_mrnG1k--Ol-Ocm9bWgaJF18k\"\n                            selectProps={{\n                                location,\n                                onChange: setLocation,\n                            }}\n                        />\n\n                    </Form.Item>\n\n\n                    <Form.Item\n                        label=\"Date Found\"\n                        name=\"date_found_input\"\n                    >\n                        <DatePicker onChange={onDateChange} />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Category\"\n                        name=\"animal_category_input\"\n                    >\n                        <Select defaultValue=\"Select\" onChange={handleSelectBoxChange}>\n                            <Option value=\"Squirrel\">Squirrel</Option>\n                            <Option value=\"bird\">Bird</Option>\n                            <Option value=\"cat\">Cat</Option>\n                            <Option value=\"chicken\">Chicken</Option>\n                            <Option value=\"dog\">Dog</Option>\n                            <Option value=\"duck\">Duck</Option>\n                            <Option value=\"fish\">Fish</Option>\n                            <Option value=\"guinea_pig\">Guinea Pig</Option>\n                            <Option value=\"hamster\">Hamster</Option>\n                            <Option value=\"horse\">Horse</Option>\n                            <Option value=\"mouse_rat\">Mouse/Rat</Option>\n                            <Option value=\"rabbit\">Rabbit</Option>\n                            <Option value=\"snake\">Snake</Option>\n                            <Option value=\"spider\">Spider</Option>\n                            <Option value=\"turtle\">Turtle</Option>\n                            <Option value=\"other\">Other</Option>\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Price\"\n                        name=\"animal_price_input\"\n                    >\n                        <Input prefix=\"$\" suffix=\"CAD\" placeholder=\"Please enter animal price\" onChange={event => setPrice(event.target.value)}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Image\"\n                        name=\"animal_image\"\n                    >\n                            <Upload\n                                listType=\"picture-card\"\n                                onPreview={handlePreview}\n                                onChange={handleChange}\n                            >\n                                {fileList.length >= 8 ? null : uploadButton}\n                            </Upload>\n                            <Modal\n                                visible={previewVisible}\n                                title={previewTitle}\n                                footer={null}\n                                onCancel={handleCancel}\n                            >\n                                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                            </Modal>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Description\"\n                        name=\"animal_description_input\"\n                    >\n                        <TextArea rows={4} onChange={event => setDescription(event.target.value)}/>\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={async (e) => handlePostAnimal(e)}>Post</Button>\n                        <Button htmlType=\"reset\" onClick={(e) => handleResetForm(e)}>Reset</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default PostAnimalForm;\n","import React, { useEffect, useState, useRef } from 'react';\nimport './forms.css';\nimport {Button, Form, Input, Layout, Modal} from 'antd';\nimport { register, verify} from '../Services/userService';\nimport Header from \"../Layout/Header\";\n\n\nconst SignUpForm = () => {\n    const [verModal, setVerModal] = useState(false);\n    const emailInput = useRef(\"\");\n    const nameInput = useRef(\"\");\n    const passwordInput = useRef(\"\");\n    const codeInput = useRef(\"\");\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const onFinish = async (values) => {\n        register(nameInput.current.props.value, emailInput.current.props.value, passwordInput.current.props.value, codeInput.current.state.value)\n        .then(res => {\n            alert(res.message);\n            window.location.href = \"/login\";\n        });\n    };\n\n    const showVerModal = () => {\n        if(!verModal) verify(emailInput.current.props.value);\n        setVerModal(!verModal);\n    }\n\n    return (\n        <div>\n            <Header/>\n            <div className=\"form_container\">\n                <div id=\"register_form_wrapper\">\n                    <h1 className=\"form_title\">Sign Up</h1>\n                    <Form id=\"register_form\" {...layout}\n                          onFinish = {onFinish}\n                    >\n                        <Form.Item\n                            label=\"Preferred Name\"\n                            name=\"name_input\"\n                        >\n                            <Input ref = {nameInput}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Email\"\n                            name=\"email_input\"\n                        >\n                            <Input ref = {emailInput} />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password_input\"\n                        >\n                            <Input.Password ref = {passwordInput}/>\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType = \"button\" onClick = {showVerModal}>Submit</Button>\n                            <Button htmlType=\"reset\">Reset</Button>\n                        </Form.Item>\n\n                        <Modal title=\"Email Address Verification\" visible={verModal}\n                               onCancel = {showVerModal}\n                               onOk = {onFinish}\n                        >\n                            {verModal ? <p>Verification code has been sent to <b>{emailInput.current.props.value}</b></p> : \"\"}\n                            <p>Please input your code here:</p>\n                            <Input id = \"333\" ref = {codeInput}/>\n                        </Modal>\n\n                    </Form>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default SignUpForm;\n","import React, { useState } from 'react';\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { PresetColorTypes } from 'antd/lib/_util/colors';\n\nvar imgUrlBase64 = [];\n\nconst Uploader = (props) => {\n\n  const [fileList, setFileList] = useState([])\n\n  const onFileListChange = (e) => {\n    return \"http://localhost:9999/api/cur_user/avatar/update\"\n  };\n\n  return (\n    <ImgCrop \n      rotate\n      shape = 'round'\n    >\n      <Upload\n        action = {onFileListChange}\n        withCredentials = {true}\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange = {props.hideUploadModal}\n      >\n        {fileList.length < 2 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};\n\nexport default Uploader;","import {Avatar, Descriptions, Rate, Card, Button, Input, Image, Skeleton } from 'antd';\nimport React, {useState, useEffect } from 'react';\nimport { getUserInfo, updateUserInfo } from '../Services/userService'\nimport './UserInfoPage.css'\nimport Modal from 'antd/lib/modal/Modal';\nimport Form from 'antd/lib/form/Form';\nimport Uploader from './Uploader';\nimport CommentCollection from '../AnimalCard/Comments';\n\nfunction UserInfo(){\n    const [uuid, setUUid] = useState(\"\");\n    const [edit, setEdit] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [inputName, setInputName] = useState('');\n    const [inputMail, setInputMail] = useState('')\n    const [inputPNumber, setInputPNumber] = useState('');\n    const [inputCity, setInputCity] = useState('');\n    const [inputIntro, setInputIntro] = useState('');\n    const [avatar, setAvatar] = useState('')\n    const [upload, showUpload] = useState(false)\n    const [comment, showComment] = useState(false)\n\n    useEffect(async () => {\n      await getUserInfo()\n        .then((res) => {\n          setUUid(res.uuid);\n          setInputName(res.name);\n          setInputPNumber(res.phone);\n          setInputMail(res.email);\n          setInputCity(res.city);\n          setInputIntro(res.intro);\n          setAvatar(res.avatar);\n          showComment(true);\n        })\n      }, [update, upload, avatar]);\n\n    const inputChangeName = (e) => {\n      setInputName(e.target.value);\n    }\n\n    const inputChangePNumber = (e) => {\n      setInputPNumber(e.target.value);\n    }\n\n    const inputChangeCity = (e) => {\n      setInputCity(e.target.value);\n    }\n\n    const inputChangeIntro = (e) => {\n      setInputIntro(e.target.value);\n    }\n\n    const enableEdit = () => {\n      setEdit(!edit);\n      if (edit) {\n        const userInfoUpdated = {\n          inputName,\n          inputPNumber,\n          inputCity,\n          inputIntro,\n        }\n        updateUserInfo(userInfoUpdated)\n          .then(() => {\n            setUpdate(!update);\n          })\n      }\n    };\n\n    const createButton = () => {\n      return(\n        <Button type=\"dashed\" style={{float: \"right\"}} onClick={enableEdit}> \n          {edit? \"FINISH\": \"EDIT\"}\n        </Button>\n      );\n    };\n        \n    return(\n        <div>\n          <div className=\"avatar\" >\n              <Avatar  \n                size={64}\n                src = {<Image \n                        src = {avatar} \n                        height = {64} \n                        width = {64}\n                        preview = {false} \n                        onClick = {() => {showUpload(true)}}\n                      />}\n              />\n          </div>\n          <div style = {{textAlign:'end', paddingRight:'3%', paddingTop:'0.5%', fontSize:'20px'}}>Account: <b>{inputMail}</b></div>\n          <Modal\n            title = \"Update your avatar!\"\n            visible = {upload}\n            onCancel = {() => {showUpload(false)}}\n            width = {250}\n            footer = {null}\n          >\n            <Uploader hideUploadModal = {() => {showUpload(false)}}/>\n          </Modal>\n\n\n          <Card title=\"Profile\" bordered={false}>\n          \n          <br />\n          <Descriptions title=\"\" bordered>\n              <Descriptions.Item label=\"User Name\" span={3}>\n                  {edit ? <Input value = {inputName} type = \"text\" onChange = {inputChangeName.bind(this)} />: <Input value = {inputName} type = \"text\" disabled = 'true' />}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Phone Number\" span={3}>\n                  {edit ? <Input value = {inputPNumber} type = \"text\" onChange = {inputChangePNumber.bind(this)} />: <Input value = {inputPNumber} type = \"text\" disabled = 'true' />}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"City\" span={3}>\n                  {edit ? <Input value = {inputCity} type = \"text\" onChange = {inputChangeCity.bind(this)} />: <Input value = {inputCity} type = \"text\" disabled = 'true' />}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Intro\" span={3}>\n                  {edit ? <Input value = {inputIntro} type = \"text\" onChange = {inputChangeIntro.bind(this)} />: <Input value = {inputIntro} type = \"text\" disabled = 'true' />}\n              </Descriptions.Item>\n          </Descriptions>\n          {createButton()}\n          </Card>\n          <br />\n          <Card title=\"Rating\" bordered={false}>\n              <Rate allowHalf disabled defaultValue={4.5} />\n          </Card>\n          <Card title=\"Comments\" bordered = {false}>\n            { comment ? \n              <CommentCollection id = {uuid} commentType = \"user\"/> : <Skeleton active/>\n            }\n          </Card>\n          <br />\n        </div>\n\n\n    );\n}\nexport default UserInfo;","import React, { useState, useEffect } from 'react';\nimport { Avatar, Card, Col, Row } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { getPostedAnimals } from '../Services/postAnimalInfo';\nimport './UserInfoPage.css'\n\nconst { Meta } = Card;\n\nfunction PostedAnimals(){\n\n    const [animalinfo, setanimalinfo] = useState([])\n\n    useEffect(async () => {\n        getPostedAnimals()\n            .then((res) => {\n                setanimalinfo(res);\n            })\n    },[]);\n    \n    const cardDisplay = animalinfo.map((card) =>\n    <Col xs={24} md={12} lg={8} xl={6} xxl={4}>\n        <Card\n        hoverable\n        style={{ height: \"95%\", objectFit: 'cover', width: 200}}\n        cover={<img alt={card.name} src={card.image} width=\"200\" height=\"180\"/>}\n        >\n        <Meta title={card.name} description={card.description} />\n        </Card>\n    </Col>\n)\n\n    return (\n        <div style = {{height:'100%', overflow :'auto'}}>\n        <br />\n        <Row gutter={16}>\n            {cardDisplay}\n        </Row>\n        </div>\n    );\n}\nexport default PostedAnimals;","import { Avatar, Table, Tag, Dropdown, Space } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { UserOutlined, DownOutlined } from '@ant-design/icons';\nimport { getTransactionHistory } from '../Services/transactionService';\nimport './UserInfoPage.css';\n\nconst { Column, ColumnGroup } = Table;\n\n// const data = [\n//     {\n//         key: '1',\n//         time:'21/01/2021',\n//         from: 'Julia',\n//         to: 'Samuel',\n//         total: 'CAD15.99',\n//         status: 'Complete',\n//         tags: ['kitten'],\n//         tid: 'dsfjkbjerkl',\n//     },\n//     {\n//         key: '2',\n//         time:'08/01/2021',\n//         from: 'Vincent',\n//         to: 'Julia',\n//         total: 'CAD12.33',\n//         status: 'Complete',\n//         tags: ['goldfish'],\n//         tid: 'kjshehjflk',\n//     },\n//     {\n//         key: '3',\n//         time:'11/02/2021',\n//         from: 'Julia',\n//         to: 'Runze',\n//         total: 'CAD9.11',\n//         status: 'Waiting for payment',\n//         tags: ['bird'],\n//         tid: 'dflgkiejrlfjklas'\n//     },\n//   ];\n\nfunction TransactionHistory(){\n\n    const [tdata, settdata] = useState([])\n\n    useEffect(async () => {\n        getTransactionHistory()\n            .then((res) => {\n                settdata(res);\n                console.log(tdata);\n            })\n    },[]);\n\n    return(\n        <>\n        <br />\n        <Table rowKey={record => record.orderNumber} expandable={{expandedRowRender: record =><p>Transaction ID: {record._id}</p>}} dataSource={tdata}>\n            <Column title=\"\" dataIndex=\"orderNumber\" key=\"orderNumber\" />\n            <Column title=\"Order Placed\" dataIndex=\"timestamp\" key=\"timestamp\" />\n            <Column title=\"From\" dataIndex=\"sellerId\" key=\"sellerId\" />\n            <Column title=\"Ship to\" dataIndex=\"buyerId\" key=\"buyerId\" />\n            <Column title=\"Total\" dataIndex=\"price\" key=\"price\" />\n            <Column title=\"Status\" dataIndex=\"status\" key=\"status\" />\n            <Column\n            title=\"TAG\"\n            dataIndex=\"tag\"\n            key=\"tag\"\n            render={tag => (\n                <>\n                <Tag color=\"green\" key={tag}>\n                {tag}\n                </Tag>\n                </>\n            )}\n            />\n        </Table>\n        </>\n    );\n}\nexport default TransactionHistory;","import { Layout, Menu, Breadcrumb} from 'antd';\nimport React, { useState } from 'react';\nimport './UserInfoPage.css'\nimport { UserOutlined, TransactionOutlined, SmileOutlined} from '@ant-design/icons';\nimport UserInfo from './UserInfo';\nimport Header from '../Layout/Header';\nimport '../Layout/Header.css'\nimport PostedAnimals from './PostedAnimals';\nimport TransactionHistory from './TransactionHistory';\nimport { withRouter } from 'react-router-dom'\n\nconst {Content, Sider } = Layout;\n\nconst UserInfoPage = (props) => {\n    const [selectedKey, setSelectedKey] = useState(props.location.state.key)\n\n    const switchComponent = (key) => {\n        switch (key){\n            case \"1\":\n                return(<UserInfo />);\n            case \"2\":\n                return(<PostedAnimals />);\n            case \"3\":\n                return(<TransactionHistory />);\n            default:\n                break;\n        }\n    }\n\n    return(\n            <Layout>\n                <Header/>\n                <Layout>\n                    <Sider width={300}>\n                        <Menu\n                        mode=\"inline\"\n                        defaultSelectedKeys={selectedKey}\n                        defaultOpenKeys={['sub1']}\n                        style={{ height: '100%', borderRight: 0 }}\n                        onClick = {(e) => setSelectedKey(e.key)}\n                        >\n                            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n                                Basic Information\n                            </Menu.Item>\n                            <Menu.Item key=\"2\" icon={<SmileOutlined />}>\n                                Posted Animals\n                            </Menu.Item>\n                            <Menu.Item key=\"3\" icon={<TransactionOutlined />}>\n                                Transaction History\n                            </Menu.Item>\n                        </Menu>\n                    </Sider>\n                    <Layout className=\"right-container\" style={{ padding: '0 24px 24px' }}>\n                        <Breadcrumb style={{ margin: '16px 0' }}>\n                        </Breadcrumb>\n                        <Content className=\"site-layout-background\">\n                            <div style = {{height:'100%', overflow :'auto'}}>\n                                {switchComponent(selectedKey)}\n                            </div>\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Layout>\n    )\n}\n\nexport default withRouter(UserInfoPage);","import React from 'react';\nimport {Form, Input, Button} from 'antd';\nimport { resetPassword } from '../Services/userService';\n\nconst ResetPwdForm = (props) => {\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 1, span: 18 },\n    };\n\n    const onResetPassword = async (values) => {\n        await resetPassword(props.match.params.token, values.password).then(\n            res => alert(res.message)\n        )\n        window.location.href = \"/login\"\n    }\n    console.log(props.match.params.token)\n    return (\n        <div className = \"form_container\">\n            <div id=\"register_form_wrapper\">\n                <h1 className=\"form_title\">Reset Password</h1>\n                <Form\n                    {...layout}\n                    onFinish = {onResetPassword}\n                >\n                    <Form.Item\n                        label = \"New password:\"\n                        name = \"password\"\n                    >\n                        <Input.Password/>\n                    </Form.Item>\n\n                    <Form.Item wrapperCol = {{ offset: 10, span: 18 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPwdForm;","import {BrowserRouter,Redirect,Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Main from './Layout/Main'\nimport LoginForm from './User/LoginForm'\nimport PostAnimalForm from './User/PostAnimalForm'\nimport SignUpForm from './User/SignUpForm'\nimport UserInfoPage from './User/UserInfoPage'\nimport \"antd/dist/antd.css\";\nimport ResetPwdForm from './User/ResetPwdForm'\nimport CommentCollection from './AnimalCard/Comments';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path = \"/\">\n          <Redirect to = \"/map\"/>\n        </Route>\n        <Route path = \"/map\">\n          <Main/>\n        </Route>\n        <Route path = \"/login\">\n            <LoginForm/>\n        </Route>\n        <Route path = \"/post\">\n          <PostAnimalForm/>\n        </Route>\n        <Route path = \"/register\">\n          <SignUpForm/>\n        </Route>\n        <Route path = \"/user\">\n          <UserInfoPage/>\n        </Route>\n        <Route path = \"/reset_pwd/:token\" component = {ResetPwdForm}>\n        </Route>\n        <Route path = \"/commenttest\">\n          <CommentCollection commentType = \"animal\" id = \"0\"/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}