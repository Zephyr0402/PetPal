[{"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/index.js":"1","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/App.js":"2","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/reportWebVitals.js":"3","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Test.js":"4","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostAnimalForm.js":"5","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Main.js":"6","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfoPage.js":"7","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/SignUpForm.js":"8","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/LoginForm.js":"9","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/HeaderContext.js":"10","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Header.js":"11","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfo.js":"12","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/TransactionHistory.js":"13","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostedAnimals.js":"14","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/MapContainer.js":"15","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/TestMap.js":"16","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/UtilityView.js":"17","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/AnimalCard.js":"18","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Services/userService.js":"19","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/Map.js":"20","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalList.js":"21","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comments.js":"22","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalThumbnail.js":"23","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comment.js":"24"},{"size":500,"mtime":1623529633190,"results":"25","hashOfConfig":"26"},{"size":1091,"mtime":1624656950832,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1623529633191,"results":"28","hashOfConfig":"26"},{"size":1045,"mtime":1624656950548,"results":"29","hashOfConfig":"26"},{"size":7889,"mtime":1624561870275,"results":"30","hashOfConfig":"26"},{"size":1065,"mtime":1624656950547,"results":"31","hashOfConfig":"26"},{"size":2331,"mtime":1624661980396,"results":"32","hashOfConfig":"26"},{"size":5465,"mtime":1624656950549,"results":"33","hashOfConfig":"26"},{"size":3082,"mtime":1624656950548,"results":"34","hashOfConfig":"26"},{"size":173,"mtime":1624656950547,"results":"35","hashOfConfig":"26"},{"size":1697,"mtime":1624656950546,"results":"36","hashOfConfig":"26"},{"size":4949,"mtime":1624669906210,"results":"37","hashOfConfig":"26"},{"size":2644,"mtime":1624677552897,"results":"38","hashOfConfig":"26"},{"size":2195,"mtime":1624660084666,"results":"39","hashOfConfig":"26"},{"size":2500,"mtime":1624656950545,"results":"40","hashOfConfig":"26"},{"size":3215,"mtime":1624656950545,"results":"41","hashOfConfig":"26"},{"size":1960,"mtime":1624561870273,"results":"42","hashOfConfig":"26"},{"size":3253,"mtime":1624561870272,"results":"43","hashOfConfig":"26"},{"size":1735,"mtime":1624656950547,"results":"44","hashOfConfig":"26"},{"size":2764,"mtime":1624656950545,"results":"45","hashOfConfig":"26"},{"size":1754,"mtime":1624561870273,"results":"46","hashOfConfig":"26"},{"size":1250,"mtime":1624561870272,"results":"47","hashOfConfig":"26"},{"size":1065,"mtime":1624561870273,"results":"48","hashOfConfig":"26"},{"size":1917,"mtime":1624561870272,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1ee1rtu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/index.js",[],["107","108"],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/App.js",["109","110"],"import {BrowserRouter,Redirect,Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Main from './Layout/Main'\nimport LoginForm from './User/LoginForm'\nimport PostAnimalForm from './User/PostAnimalForm'\nimport SignUpForm from './User/SignUpForm'\nimport UserInfoPage from './User/UserInfoPage'\nimport Test from './Test'\nimport \"antd/dist/antd.css\";\nimport {LogContext} from './Layout/HeaderContext';\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path = \"/\">\n          <Redirect to = \"/map\"/>\n        </Route>\n        <Route path = \"/map\">\n          <Main/>\n        </Route>\n        <Route path = \"/login\">\n            <LoginForm/>\n        </Route>\n        <Route path = \"/post\">\n          <PostAnimalForm/>\n        </Route>\n        <Route path = \"/register\">\n          <SignUpForm/>\n        </Route>\n        <Route path = \"/user\">\n          <UserInfoPage/>\n        </Route>\n        <Route path = \"/test\">\n          <Test/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/reportWebVitals.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Test.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostAnimalForm.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Main.js",["111"],"import React, { useState } from 'react';\nimport MapContainer from '../AnimalMap/MapContainer'\nimport {Layout} from 'antd';\nimport Header from './Header';\nimport UtilityView from '../AnimalList/UtilityView';\nimport AnimalCard from '../AnimalCard/AnimalCard'\nimport TestMapContainer from '../AnimalMap/TestMap';\n\nconst Main = (props) => {\n    const [display, setDisplay] = useState(-1); \n\n    const setMyDisplay = (e) => {\n        setDisplay(e);\n    }\n\n    return(\n        <Layout>\n            <Header/>\n            <Layout>\n                <Layout.Sider width = \"38%\" style = {{backgroundColor:'white'}}>\n                    {  display === -1 ? <UtilityView setDisplay = {setMyDisplay}/> : <AnimalCard aid = {display} setDisplay = {setMyDisplay}/> }\n                </Layout.Sider>\n                <Layout>\n                    <Layout.Content>\n                        <TestMapContainer aid = {display} setDisplay = {setMyDisplay}/>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default Main;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfoPage.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/SignUpForm.js",["112","113"],"import React from 'react';\nimport './forms.css';\nimport { Button, Form, Input, Select, Upload, message} from 'antd';\nimport {UploadOutlined} from \"@ant-design/icons\";\nimport { getCookie, register, getView } from '../Services/userService';\n\n\nfunction SignUpForm() {\n    const { Option } = Select;\n    const { TextArea } = Input;\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const onFinish = (values) => {\n        register(values.username_input, values.password_input)\n        .then(res => {\n            // if(typeof res.message === \"string\")\n            //     return alert(res.message);\n            console.log(res);\n        });\n        //window.location.href = \"/login\";\n        //getView().then();\n    };\n\n    const handleResetForm = (e) => {\n        e.preventDefault();\n        resetInput();\n    };\n\n    const resetInput = () => {\n        //TODO: replace with actual resetInput functionality\n        console.log(\"resetInput\");\n    };\n\n    const beforeUpload = (file) => {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        return isJpgOrPng;\n    };\n\n    const handleUpload = (info) => {\n        //TODO: replace with actual handleUpload functionality\n        console.log(\"handleUpload\");\n    };\n\n    return (\n        <div className=\"form_container\">\n            <div id=\"register_form_wrapper\">\n                <h1 className=\"form_title\">Sign Up</h1>\n                <Form id=\"register_form\" {...layout}\n                    onFinish = {onFinish}\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username_input\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password_input\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email_input\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Phone Number\"\n                        name=\"phone_number_input\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Street Address\"\n                        name=\"street_address_input\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"City\"\n                    >\n                        <Input.Group compact>\n                            <Form.Item\n                                name={['location', 'city']}\n                                noStyle\n                            >\n                                <Input placeholder=\"City\" style={{ width: '50%' }} />\n                            </Form.Item>\n                            <Form.Item\n                                name={['location', 'province']}\n                                noStyle\n                            >\n                                <Select placeholder=\"Province\">\n                                    <Option value=\"ab\">AB</Option>\n                                    <Option value=\"bc\">BC</Option>\n                                    <Option value=\"mb\">MB</Option>\n                                    <Option value=\"nb\">NB</Option>\n                                    <Option value=\"nl\">NL</Option>\n                                    <Option value=\"nt\">NT</Option>\n                                    <Option value=\"ns\">NS</Option>\n                                    <Option value=\"nu\">NU</Option>\n                                    <Option value=\"on\">ON</Option>\n                                    <Option value=\"pe\">PE</Option>\n                                    <Option value=\"qc\">QC</Option>\n                                    <Option value=\"sk\">SK</Option>\n                                    <Option value=\"yt\">YT</Option>\n                                </Select>\n                            </Form.Item>\n                        </Input.Group>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Identification\"\n                        name=\"identification_document\"\n                    >\n                        <Upload beforeUpload={beforeUpload} onChange={handleUpload}>\n                            <Button icon={<UploadOutlined />}>Upload (png or jpg only)</Button>\n                        </Upload>\n\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"About\"\n                        name=\"about_input\"\n                    >\n                        <TextArea rows={4} />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                        <Button htmlType=\"reset\" onClick={(e) => handleResetForm(e)}>Reset</Button>\n                    </Form.Item>\n\n                </Form>\n            </div>\n        </div>\n    );\n\n}\n\nexport default SignUpForm;\n","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/LoginForm.js",["114","115","116","117","118","119"],"import React from 'react';\nimport './forms.css';\nimport { Form, Input, Button } from 'antd';\nimport { getCookie, getHeader, login , getView} from '../Services/userService';\nimport { LogContext } from '../Layout/HeaderContext';\nimport { stringify } from 'css';\nimport {cookies} from 'react-cookie'\n\nconst LoginForm = (props) => {\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const onFinish = async (values) => {\n        //getView().then(res => console.log(res));\n        // await getCookie()\n        // .then(res => console.log(res));\n        await login(values.username, values.password)\n        .then(\n            // if(typeof user.message === \"string\")\n            //     return alert(user.message);\n            \n            \n        );\n        getHeader(\"runzw\")\n            .then(res => {\n                console.log(res);\n        })\n        // getHeader(\"_none_\")\n        //     .then(res => {\n        //         console.log(res);\n        // })\n        // getView().then(res=>console.log(res));\n        // getView().then(res=>console.log(res));\n        // getView().then(res=>console.log(res));\n        // getView().then(res=>console.log(res));\n        \n        //window.location.href = '/';\n    };\n\n    const onClick = () => {\n        getHeader(\"_none_\")\n            .then(res => {\n                console.log(res);\n        })\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        //TODO: replace with actual onFinishFailed functionality\n        console.log('Failed:', errorInfo);\n    };\n    console.log(props);\n    return (\n        <div className=\"form_container\">\n            <div id=\"login_form_wrapper\">\n                <h1 className=\"form_title\">Log in</h1>\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        place\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                \n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                        <a className=\"login-form-forgot\" href=\"\">\n                            Forgot password\n                        </a>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        New user? <a href=\"/register\"> Sign up here! </a>\n                    </Form.Item>\n                    <Button onClick = {onClick}>check status</Button>\n                </Form>\n            </div>\n        </div>\n    );\n\n}\n\nexport default LoginForm;\n","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/HeaderContext.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Header.js",["120"],"import React, { useEffect, useState } from 'react';\nimport {Button, Tooltip, Avatar, Typography} from 'antd';\nimport './Header.css';\nimport {Link} from 'react-router-dom';\nimport { FormOutlined } from '@ant-design/icons';\nimport {LogContext} from './HeaderContext';\nimport { getHeader } from '../Services/userService';\n\nconst Header = (props) => {\n    const [header, setHeader] = useState(\"\");\n\n    useEffect(()=>{\n        console.log(\"hello\");\n        getHeader()\n            .then(res => {\n                console.log(res);\n                setHeader(res);\n            })\n    },[]);\n\n    return (\n        <header className = \"header\">\n            <img src=\"https://i.ibb.co/k3rqzWb/Petpal-logo.png\" alt=\"Petpal-logo\" border=\"0\" width={200}/>\n            {\n                header.Logged ? \n                    <span className = \"header-btns\">\n                        <Button className = \"header-btn\" type = 'primary' danger href = \"/logout\">Log out</Button>\n                        <Avatar style = {{marginRight:\"8px\"}} src = {header.avatar}/>\n                        <Typography.Text strong>{header.name}</Typography.Text>\n                    </span>\n                :\n                    <span className = \"header-btns\">\n                        <Tooltip title = \"Post now!\">\n                            <Button danger shape=\"circle\" icon={<FormOutlined />} href = \"/post\"/>\n                        </Tooltip>\n                        <Link className = \"header-btn\" to = \"/login\">Log in</Link>\n                        <Button className = \"header-btn\" type = 'primary' href = \"/register\">Sign up</Button>\n                    </span>\n            }\n        </header>\n    );\n};\n\nexport default Header;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfo.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/TransactionHistory.js",["121","122","123","124"],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostedAnimals.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/MapContainer.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/TestMap.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/UtilityView.js",["125","126","127","128"],"import React from 'react';\nimport { Input, Space, Button, AutoComplete, Select} from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport AnimalList from './AnimalList';\nimport './UtilityView.css';\n\nclass UtilityView extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onSearch(e){\n        var filter = e.target.value.toUpperCase();\n        var thumbnails = document.getElementsByClassName('animal-list-item')\n        for(let thumbnail of thumbnails){\n            if(thumbnail.id.toUpperCase().indexOf(filter) == -1){\n                thumbnail.style.display = 'none';\n            }\n            else{\n                thumbnail.style.display = 'block';\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className = \"animal-list\" style = {{height:'100%'}}>\n                <Space direction=\"vertical\" style={{ width: \"100%\", height:\"100%\", overflow:'scroll', padding: 8}}>\n                    <Input \n                        placeholder=\" Search animal names, descriptions here...\" \n                        allowClear \n                        onKeyUp={this.onSearch} \n                        style={{ marginLeft: \"4px\", width: '96%', height: '30px', padding: 0}}\n                        suffix = {<SearchOutlined style = {{marginRight:\"5px\"}}/>}\n                    />\n                    <div className=\"filterView\">\n                        <b style={{ margin: '2px', fontSize: '16px'}}>Filter:</b>\n                        <Button className = \"filter-type\" shape=\"round\">Age</Button>\n                        <Button className = \"filter-type\" shape=\"round\">City</Button>\n                        <Button className = \"filter-type\" shape=\"round\">Kind</Button>\n                    </div>\n                    <AnimalList style={{ width: 'inherit' }} setDisplay = {this.props.setDisplay}></AnimalList>\n                </Space>\n            </div>\n        )\n    }\n\n}\n\nexport default UtilityView;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/AnimalCard.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Services/userService.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/Map.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalList.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comments.js",["129","130"],"import React, { createElement, useState } from 'react';\nimport UserComment from './Comment'\n\n//grab comments by animalID from the back end here\nconst data = [\n  {\n    user: 'Nawa',\n    userAvatar: 'userAvatars/nawa.png',\n    content: 'Jerry is sooooo cute! I sooooo love it!',\n    subComments:[\n      {\n        user: 'Julia',\n        userAvatar: 'userAvatars/julia.jpg',\n        content: 'Thank you! Jerry is my favorite!'\n      }\n    ]\n  },\n  {\n    user: 'Runze',\n    userAvatar: 'userAvatars/tsuki.jpg',\n    content: 'I\\'ll raise my offer to 100 bucks! Deal?',\n    subComments: []\n  },\n  {\n    user: 'Shijun',\n    userAvatar: 'userAvatars/shijun.jpg',\n    content: 'DONT listen to Runze, I bet he\\'s a dog person!',\n    subComments:[\n      {\n        user: \"Runze\",\n        userAvatar: 'userAvatars/tsuki.jpg',\n        content: 'Hey! Watch your language, you are a dog person!',\n      }\n    ]\n  }\n]\n\nconst Comments = () => {\n  return (\n    <div className = \"comments\">\n      {\n        data.map(e => \n          <UserComment \n            commentDetail={e} \n            subComments = {e.subComments.map(sub => \n              <UserComment commentDetail = {sub}/>\n            )}\n          />\n        )\n      } \n    </div>\n  );\n};\n\nexport default Comments","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalThumbnail.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comment.js",["131"],"import React , {createElement,useState} from 'react';\nimport { Comment, Tooltip, Avatar } from 'antd';\nimport moment from 'moment';\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons';\n\nconst UserComment = (props) => {\n    const cmtDetail = props.commentDetail;\n\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [action, setAction] = useState(null);\n  \n    const like = () => {\n      setLikes(1);\n      setDislikes(0);\n      setAction('liked');\n    };\n  \n    const dislike = () => {\n      setLikes(0);\n      setDislikes(1);\n      setAction('disliked');\n    };\n  \n    const actions = [\n      <Tooltip key=\"comment-basic-like\" title=\"Like\">\n        <span onClick={like}>\n          {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n        </span>\n      </Tooltip>,\n      <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n        <span onClick={dislike}>\n          {createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n          <span className=\"comment-action\">{dislikes}</span>\n        </span>\n      </Tooltip>,\n      <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n\n    return(\n        <Comment\n            actions={actions}\n            author={<a>{cmtDetail.user}</a>}\n            avatar={\n                <Avatar\n                src={cmtDetail.userAvatar}\n                alt=\"Han Solo\"\n                />\n            }\n            content={\n                <p>\n                {cmtDetail.content}\n                </p>\n            }\n            datetime={\n                <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                <span>{moment().fromNow()}</span>\n                </Tooltip>\n            }\n        >\n          {props.subComments}\n        </Comment>\n    )\n}\n\nexport default UserComment;",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":10,"column":9,"nodeType":"138","messageId":"139","endLine":10,"endColumn":19},{"ruleId":"136","severity":1,"message":"140","line":11,"column":10,"nodeType":"138","messageId":"139","endLine":11,"endColumn":18},{"ruleId":"136","severity":1,"message":"141","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":20},{"ruleId":"136","severity":1,"message":"142","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":19},{"ruleId":"136","severity":1,"message":"143","line":5,"column":31,"nodeType":"138","messageId":"139","endLine":5,"endColumn":38},{"ruleId":"136","severity":1,"message":"142","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":19},{"ruleId":"136","severity":1,"message":"143","line":4,"column":40,"nodeType":"138","messageId":"139","endLine":4,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":20},{"ruleId":"136","severity":1,"message":"144","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":19},{"ruleId":"136","severity":1,"message":"145","line":7,"column":9,"nodeType":"138","messageId":"139","endLine":7,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":85,"column":25,"nodeType":"148","endLine":85,"endColumn":66},{"ruleId":"136","severity":1,"message":"137","line":6,"column":9,"nodeType":"138","messageId":"139","endLine":6,"endColumn":19},{"ruleId":"136","severity":1,"message":"149","line":1,"column":30,"nodeType":"138","messageId":"139","endLine":1,"endColumn":38},{"ruleId":"136","severity":1,"message":"150","line":1,"column":40,"nodeType":"138","messageId":"139","endLine":1,"endColumn":45},{"ruleId":"136","severity":1,"message":"151","line":2,"column":24,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"152","line":5,"column":17,"nodeType":"138","messageId":"139","endLine":5,"endColumn":28},{"ruleId":"136","severity":1,"message":"153","line":2,"column":32,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"154","line":2,"column":46,"nodeType":"138","messageId":"139","endLine":2,"endColumn":52},{"ruleId":"155","severity":1,"message":"156","line":8,"column":5,"nodeType":"157","messageId":"158","endLine":10,"endColumn":6},{"ruleId":"159","severity":1,"message":"160","line":16,"column":59,"nodeType":"161","messageId":"162","endLine":16,"endColumn":61},{"ruleId":"136","severity":1,"message":"163","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":30},{"ruleId":"136","severity":1,"message":"140","line":1,"column":32,"nodeType":"138","messageId":"139","endLine":1,"endColumn":40},{"ruleId":"146","severity":1,"message":"164","line":44,"column":21,"nodeType":"148","endLine":44,"endColumn":24},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'LogContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'MapContainer' is defined but never used.","'getCookie' is defined but never used.","'getView' is defined but never used.","'stringify' is defined but never used.","'cookies' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","'Space' is defined but never used.","'DownOutlined' is defined but never used.","'ColumnGroup' is assigned a value but never used.","'AutoComplete' is defined but never used.","'Select' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createElement' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]