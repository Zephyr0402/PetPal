[{"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/index.js":"1","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/App.js":"2","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/reportWebVitals.js":"3","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/components/UserInfo/UserInfoPage.js":"4","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/components/UserInfo/UserInfo.js":"5","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/LoginForm.js":"6","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/SignUpForm.js":"7","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Main.js":"8","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostAnimalForm.js":"9","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfoPage.js":"10","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfo.js":"11","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Header.js":"12","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/MapContainer.js":"13","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/AnimalCard.js":"14","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/UtilityView.js":"15","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/Map.js":"16","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comments.js":"17","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalList.js":"18","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comment.js":"19","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalThumbnail.js":"20","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostedAnimals.js":"21","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/TransactionHistory.js":"22","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Test.js":"23","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/HeaderContext.js":"24","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/TestMap.js":"25","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Services/userService.js":"26"},{"size":500,"mtime":1623529633190,"results":"27","hashOfConfig":"28"},{"size":1091,"mtime":1624656950832,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1623529633191,"results":"30","hashOfConfig":"28"},{"size":1409,"mtime":1623364353134,"results":"31","hashOfConfig":"28"},{"size":3160,"mtime":1623365649612,"results":"32","hashOfConfig":"28"},{"size":3082,"mtime":1624656950548,"results":"33","hashOfConfig":"28"},{"size":5465,"mtime":1624656950549,"results":"34","hashOfConfig":"28"},{"size":1065,"mtime":1624656950547,"results":"35","hashOfConfig":"28"},{"size":7889,"mtime":1624561870275,"results":"36","hashOfConfig":"28"},{"size":2331,"mtime":1624661980396,"results":"37","hashOfConfig":"28"},{"size":3121,"mtime":1624656938934,"results":"38","hashOfConfig":"28"},{"size":1697,"mtime":1624656950546,"results":"39","hashOfConfig":"28"},{"size":2500,"mtime":1624656950545,"results":"40","hashOfConfig":"28"},{"size":3253,"mtime":1624561870272,"results":"41","hashOfConfig":"28"},{"size":1960,"mtime":1624561870273,"results":"42","hashOfConfig":"28"},{"size":2764,"mtime":1624656950545,"results":"43","hashOfConfig":"28"},{"size":1250,"mtime":1624561870272,"results":"44","hashOfConfig":"28"},{"size":1754,"mtime":1624561870273,"results":"45","hashOfConfig":"28"},{"size":1917,"mtime":1624561870272,"results":"46","hashOfConfig":"28"},{"size":1065,"mtime":1624561870273,"results":"47","hashOfConfig":"28"},{"size":2195,"mtime":1624660084666,"results":"48","hashOfConfig":"28"},{"size":1633,"mtime":1624656938933,"results":"49","hashOfConfig":"28"},{"size":1045,"mtime":1624656950548,"results":"50","hashOfConfig":"28"},{"size":173,"mtime":1624656950547,"results":"51","hashOfConfig":"28"},{"size":3215,"mtime":1624656950545,"results":"52","hashOfConfig":"28"},{"size":1735,"mtime":1624656950547,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1cli4lq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/index.js",[],["116","117"],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/App.js",["118","119"],"import {BrowserRouter,Redirect,Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport Main from './Layout/Main'\nimport LoginForm from './User/LoginForm'\nimport PostAnimalForm from './User/PostAnimalForm'\nimport SignUpForm from './User/SignUpForm'\nimport UserInfoPage from './User/UserInfoPage'\nimport Test from './Test'\nimport \"antd/dist/antd.css\";\nimport {LogContext} from './Layout/HeaderContext';\nimport { useState } from 'react';\n\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path = \"/\">\n          <Redirect to = \"/map\"/>\n        </Route>\n        <Route path = \"/map\">\n          <Main/>\n        </Route>\n        <Route path = \"/login\">\n            <LoginForm/>\n        </Route>\n        <Route path = \"/post\">\n          <PostAnimalForm/>\n        </Route>\n        <Route path = \"/register\">\n          <SignUpForm/>\n        </Route>\n        <Route path = \"/user\">\n          <UserInfoPage/>\n        </Route>\n        <Route path = \"/test\">\n          <Test/>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/reportWebVitals.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/components/UserInfo/UserInfoPage.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/components/UserInfo/UserInfo.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/LoginForm.js",["120","121","122","123","124","125"],"import React from 'react';\nimport './forms.css';\nimport { Form, Input, Button } from 'antd';\nimport { getCookie, getHeader, login , getView} from '../Services/userService';\nimport { LogContext } from '../Layout/HeaderContext';\nimport { stringify } from 'css';\nimport {cookies} from 'react-cookie'\n\nconst LoginForm = (props) => {\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const onFinish = async (values) => {\n        //getView().then(res => console.log(res));\n        // await getCookie()\n        // .then(res => console.log(res));\n        await login(values.username, values.password)\n        .then(\n            // if(typeof user.message === \"string\")\n            //     return alert(user.message);\n            \n            \n        );\n        getHeader(\"runzw\")\n            .then(res => {\n                console.log(res);\n        })\n        // getHeader(\"_none_\")\n        //     .then(res => {\n        //         console.log(res);\n        // })\n        // getView().then(res=>console.log(res));\n        // getView().then(res=>console.log(res));\n        // getView().then(res=>console.log(res));\n        // getView().then(res=>console.log(res));\n        \n        //window.location.href = '/';\n    };\n\n    const onClick = () => {\n        getHeader(\"_none_\")\n            .then(res => {\n                console.log(res);\n        })\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        //TODO: replace with actual onFinishFailed functionality\n        console.log('Failed:', errorInfo);\n    };\n    console.log(props);\n    return (\n        <div className=\"form_container\">\n            <div id=\"login_form_wrapper\">\n                <h1 className=\"form_title\">Log in</h1>\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username\"\n                        place\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                \n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                        <a className=\"login-form-forgot\" href=\"\">\n                            Forgot password\n                        </a>\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        New user? <a href=\"/register\"> Sign up here! </a>\n                    </Form.Item>\n                    <Button onClick = {onClick}>check status</Button>\n                </Form>\n            </div>\n        </div>\n    );\n\n}\n\nexport default LoginForm;\n","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/SignUpForm.js",["126","127"],"import React from 'react';\nimport './forms.css';\nimport { Button, Form, Input, Select, Upload, message} from 'antd';\nimport {UploadOutlined} from \"@ant-design/icons\";\nimport { getCookie, register, getView } from '../Services/userService';\n\n\nfunction SignUpForm() {\n    const { Option } = Select;\n    const { TextArea } = Input;\n\n    const layout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 18 },\n    };\n\n    const tailLayout = {\n        wrapperCol: { offset: 6, span: 18 },\n    };\n\n    const onFinish = (values) => {\n        register(values.username_input, values.password_input)\n        .then(res => {\n            // if(typeof res.message === \"string\")\n            //     return alert(res.message);\n            console.log(res);\n        });\n        //window.location.href = \"/login\";\n        //getView().then();\n    };\n\n    const handleResetForm = (e) => {\n        e.preventDefault();\n        resetInput();\n    };\n\n    const resetInput = () => {\n        //TODO: replace with actual resetInput functionality\n        console.log(\"resetInput\");\n    };\n\n    const beforeUpload = (file) => {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        return isJpgOrPng;\n    };\n\n    const handleUpload = (info) => {\n        //TODO: replace with actual handleUpload functionality\n        console.log(\"handleUpload\");\n    };\n\n    return (\n        <div className=\"form_container\">\n            <div id=\"register_form_wrapper\">\n                <h1 className=\"form_title\">Sign Up</h1>\n                <Form id=\"register_form\" {...layout}\n                    onFinish = {onFinish}\n                >\n                    <Form.Item\n                        label=\"Username\"\n                        name=\"username_input\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password_input\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email_input\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Phone Number\"\n                        name=\"phone_number_input\"\n                    >\n                        <Input />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Street Address\"\n                        name=\"street_address_input\"\n                    >\n                        <Input/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"City\"\n                    >\n                        <Input.Group compact>\n                            <Form.Item\n                                name={['location', 'city']}\n                                noStyle\n                            >\n                                <Input placeholder=\"City\" style={{ width: '50%' }} />\n                            </Form.Item>\n                            <Form.Item\n                                name={['location', 'province']}\n                                noStyle\n                            >\n                                <Select placeholder=\"Province\">\n                                    <Option value=\"ab\">AB</Option>\n                                    <Option value=\"bc\">BC</Option>\n                                    <Option value=\"mb\">MB</Option>\n                                    <Option value=\"nb\">NB</Option>\n                                    <Option value=\"nl\">NL</Option>\n                                    <Option value=\"nt\">NT</Option>\n                                    <Option value=\"ns\">NS</Option>\n                                    <Option value=\"nu\">NU</Option>\n                                    <Option value=\"on\">ON</Option>\n                                    <Option value=\"pe\">PE</Option>\n                                    <Option value=\"qc\">QC</Option>\n                                    <Option value=\"sk\">SK</Option>\n                                    <Option value=\"yt\">YT</Option>\n                                </Select>\n                            </Form.Item>\n                        </Input.Group>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Identification\"\n                        name=\"identification_document\"\n                    >\n                        <Upload beforeUpload={beforeUpload} onChange={handleUpload}>\n                            <Button icon={<UploadOutlined />}>Upload (png or jpg only)</Button>\n                        </Upload>\n\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"About\"\n                        name=\"about_input\"\n                    >\n                        <TextArea rows={4} />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n                        <Button htmlType=\"reset\" onClick={(e) => handleResetForm(e)}>Reset</Button>\n                    </Form.Item>\n\n                </Form>\n            </div>\n        </div>\n    );\n\n}\n\nexport default SignUpForm;\n","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Main.js",["128"],"import React, { useState } from 'react';\nimport MapContainer from '../AnimalMap/MapContainer'\nimport {Layout} from 'antd';\nimport Header from './Header';\nimport UtilityView from '../AnimalList/UtilityView';\nimport AnimalCard from '../AnimalCard/AnimalCard'\nimport TestMapContainer from '../AnimalMap/TestMap';\n\nconst Main = (props) => {\n    const [display, setDisplay] = useState(-1); \n\n    const setMyDisplay = (e) => {\n        setDisplay(e);\n    }\n\n    return(\n        <Layout>\n            <Header/>\n            <Layout>\n                <Layout.Sider width = \"38%\" style = {{backgroundColor:'white'}}>\n                    {  display === -1 ? <UtilityView setDisplay = {setMyDisplay}/> : <AnimalCard aid = {display} setDisplay = {setMyDisplay}/> }\n                </Layout.Sider>\n                <Layout>\n                    <Layout.Content>\n                        <TestMapContainer aid = {display} setDisplay = {setMyDisplay}/>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default Main;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostAnimalForm.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfoPage.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/UserInfo.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/Header.js",["129"],"import React, { useEffect, useState } from 'react';\nimport {Button, Tooltip, Avatar, Typography} from 'antd';\nimport './Header.css';\nimport {Link} from 'react-router-dom';\nimport { FormOutlined } from '@ant-design/icons';\nimport {LogContext} from './HeaderContext';\nimport { getHeader } from '../Services/userService';\n\nconst Header = (props) => {\n    const [header, setHeader] = useState(\"\");\n\n    useEffect(()=>{\n        console.log(\"hello\");\n        getHeader()\n            .then(res => {\n                console.log(res);\n                setHeader(res);\n            })\n    },[]);\n\n    return (\n        <header className = \"header\">\n            <img src=\"https://i.ibb.co/k3rqzWb/Petpal-logo.png\" alt=\"Petpal-logo\" border=\"0\" width={200}/>\n            {\n                header.Logged ? \n                    <span className = \"header-btns\">\n                        <Button className = \"header-btn\" type = 'primary' danger href = \"/logout\">Log out</Button>\n                        <Avatar style = {{marginRight:\"8px\"}} src = {header.avatar}/>\n                        <Typography.Text strong>{header.name}</Typography.Text>\n                    </span>\n                :\n                    <span className = \"header-btns\">\n                        <Tooltip title = \"Post now!\">\n                            <Button danger shape=\"circle\" icon={<FormOutlined />} href = \"/post\"/>\n                        </Tooltip>\n                        <Link className = \"header-btn\" to = \"/login\">Log in</Link>\n                        <Button className = \"header-btn\" type = 'primary' href = \"/register\">Sign up</Button>\n                    </span>\n            }\n        </header>\n    );\n};\n\nexport default Header;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/MapContainer.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/AnimalCard.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/UtilityView.js",["130","131","132","133"],"import React from 'react';\nimport { Input, Space, Button, AutoComplete, Select} from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport AnimalList from './AnimalList';\nimport './UtilityView.css';\n\nclass UtilityView extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onSearch(e){\n        var filter = e.target.value.toUpperCase();\n        var thumbnails = document.getElementsByClassName('animal-list-item')\n        for(let thumbnail of thumbnails){\n            if(thumbnail.id.toUpperCase().indexOf(filter) == -1){\n                thumbnail.style.display = 'none';\n            }\n            else{\n                thumbnail.style.display = 'block';\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className = \"animal-list\" style = {{height:'100%'}}>\n                <Space direction=\"vertical\" style={{ width: \"100%\", height:\"100%\", overflow:'scroll', padding: 8}}>\n                    <Input \n                        placeholder=\" Search animal names, descriptions here...\" \n                        allowClear \n                        onKeyUp={this.onSearch} \n                        style={{ marginLeft: \"4px\", width: '96%', height: '30px', padding: 0}}\n                        suffix = {<SearchOutlined style = {{marginRight:\"5px\"}}/>}\n                    />\n                    <div className=\"filterView\">\n                        <b style={{ margin: '2px', fontSize: '16px'}}>Filter:</b>\n                        <Button className = \"filter-type\" shape=\"round\">Age</Button>\n                        <Button className = \"filter-type\" shape=\"round\">City</Button>\n                        <Button className = \"filter-type\" shape=\"round\">Kind</Button>\n                    </div>\n                    <AnimalList style={{ width: 'inherit' }} setDisplay = {this.props.setDisplay}></AnimalList>\n                </Space>\n            </div>\n        )\n    }\n\n}\n\nexport default UtilityView;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/Map.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comments.js",["134","135"],"import React, { createElement, useState } from 'react';\nimport UserComment from './Comment'\n\n//grab comments by animalID from the back end here\nconst data = [\n  {\n    user: 'Nawa',\n    userAvatar: 'userAvatars/nawa.png',\n    content: 'Jerry is sooooo cute! I sooooo love it!',\n    subComments:[\n      {\n        user: 'Julia',\n        userAvatar: 'userAvatars/julia.jpg',\n        content: 'Thank you! Jerry is my favorite!'\n      }\n    ]\n  },\n  {\n    user: 'Runze',\n    userAvatar: 'userAvatars/tsuki.jpg',\n    content: 'I\\'ll raise my offer to 100 bucks! Deal?',\n    subComments: []\n  },\n  {\n    user: 'Shijun',\n    userAvatar: 'userAvatars/shijun.jpg',\n    content: 'DONT listen to Runze, I bet he\\'s a dog person!',\n    subComments:[\n      {\n        user: \"Runze\",\n        userAvatar: 'userAvatars/tsuki.jpg',\n        content: 'Hey! Watch your language, you are a dog person!',\n      }\n    ]\n  }\n]\n\nconst Comments = () => {\n  return (\n    <div className = \"comments\">\n      {\n        data.map(e => \n          <UserComment \n            commentDetail={e} \n            subComments = {e.subComments.map(sub => \n              <UserComment commentDetail = {sub}/>\n            )}\n          />\n        )\n      } \n    </div>\n  );\n};\n\nexport default Comments","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalList.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalCard/Comment.js",["136"],"import React , {createElement,useState} from 'react';\nimport { Comment, Tooltip, Avatar } from 'antd';\nimport moment from 'moment';\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons';\n\nconst UserComment = (props) => {\n    const cmtDetail = props.commentDetail;\n\n    const [likes, setLikes] = useState(0);\n    const [dislikes, setDislikes] = useState(0);\n    const [action, setAction] = useState(null);\n  \n    const like = () => {\n      setLikes(1);\n      setDislikes(0);\n      setAction('liked');\n    };\n  \n    const dislike = () => {\n      setLikes(0);\n      setDislikes(1);\n      setAction('disliked');\n    };\n  \n    const actions = [\n      <Tooltip key=\"comment-basic-like\" title=\"Like\">\n        <span onClick={like}>\n          {createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n          <span className=\"comment-action\">{likes}</span>\n        </span>\n      </Tooltip>,\n      <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\n        <span onClick={dislike}>\n          {createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n          <span className=\"comment-action\">{dislikes}</span>\n        </span>\n      </Tooltip>,\n      <span key=\"comment-basic-reply-to\">Reply to</span>,\n    ];\n\n    return(\n        <Comment\n            actions={actions}\n            author={<a>{cmtDetail.user}</a>}\n            avatar={\n                <Avatar\n                src={cmtDetail.userAvatar}\n                alt=\"Han Solo\"\n                />\n            }\n            content={\n                <p>\n                {cmtDetail.content}\n                </p>\n            }\n            datetime={\n                <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                <span>{moment().fromNow()}</span>\n                </Tooltip>\n            }\n        >\n          {props.subComments}\n        </Comment>\n    )\n}\n\nexport default UserComment;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalList/AnimalThumbnail.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/PostedAnimals.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/User/TransactionHistory.js",["137","138"],"import { Avatar, Table, Tag, Space } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport './UserInfoPage.css';\n\nconst { Column, ColumnGroup } = Table;\n\nconst data = [\n    {\n        key: '1',\n        time:'21/01/2021',\n        from: 'Julia',\n        to: 'Samuel',\n        status: 'Complete',\n        tags: ['kitten'],\n    },\n    {\n        key: '2',\n        time:'08/01/2021',\n        from: 'Vincent',\n        to: 'Nawa',\n        status: 'Complete',\n        tags: ['goldfish'],\n    },\n    {\n        key: '2',\n        time:'11/02/2021',\n        from: 'Bevis',\n        to: 'Runze',\n        status: 'Waiting for payment',\n        tags: ['bird'],\n    },\n  ];\n\nfunction TransactionHistory(){\n    return(\n        <>\n        <div className=\"avatar\">\n            <Avatar size={64} icon={<UserOutlined />} />\n        </div>\n        <br />\n        <Table dataSource={data}>\n            <Column title=\"ID\" dataIndex=\"key\" key=\"key\" />\n            <Column title=\"TRANSACTION TIME\" dataIndex=\"time\" key=\"time\" />\n            <Column title=\"FROM\" dataIndex=\"from\" key=\"from\" />\n            <Column title=\"TO\" dataIndex=\"to\" key=\"to\" />\n            <Column title=\"STATUS\" dataIndex=\"status\" key=\"status\" />\n            <Column\n            title=\"TAGS\"\n            dataIndex=\"tags\"\n            key=\"tags\"\n            render={tags => (\n                <>\n                {tags.map(tag => (\n                    <Tag color=\"blue\" key={tag}>\n                    {tag}\n                    </Tag>\n                ))}\n                </>\n            )}\n            />\n        </Table>\n        </>\n    );\n}\nexport default TransactionHistory;","/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Test.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Layout/HeaderContext.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/AnimalMap/TestMap.js",[],"/Users/liju/Documents/Canada/UBC/2021Summer/CPSC455/Project/PetPal/frontend/src/Services/userService.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":10,"column":9,"nodeType":"145","messageId":"146","endLine":10,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":11,"column":10,"nodeType":"145","messageId":"146","endLine":11,"endColumn":18},{"ruleId":"143","severity":1,"message":"148","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":19},{"ruleId":"143","severity":1,"message":"149","line":4,"column":40,"nodeType":"145","messageId":"146","endLine":4,"endColumn":47},{"ruleId":"143","severity":1,"message":"144","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"150","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"151","line":7,"column":9,"nodeType":"145","messageId":"146","endLine":7,"endColumn":16},{"ruleId":"152","severity":1,"message":"153","line":85,"column":25,"nodeType":"154","endLine":85,"endColumn":66},{"ruleId":"143","severity":1,"message":"148","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":19},{"ruleId":"143","severity":1,"message":"149","line":5,"column":31,"nodeType":"145","messageId":"146","endLine":5,"endColumn":38},{"ruleId":"143","severity":1,"message":"155","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":6,"column":9,"nodeType":"145","messageId":"146","endLine":6,"endColumn":19},{"ruleId":"143","severity":1,"message":"156","line":2,"column":32,"nodeType":"145","messageId":"146","endLine":2,"endColumn":44},{"ruleId":"143","severity":1,"message":"157","line":2,"column":46,"nodeType":"145","messageId":"146","endLine":2,"endColumn":52},{"ruleId":"158","severity":1,"message":"159","line":8,"column":5,"nodeType":"160","messageId":"161","endLine":10,"endColumn":6},{"ruleId":"162","severity":1,"message":"163","line":16,"column":59,"nodeType":"164","messageId":"165","endLine":16,"endColumn":61},{"ruleId":"143","severity":1,"message":"166","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":30},{"ruleId":"143","severity":1,"message":"147","line":1,"column":32,"nodeType":"145","messageId":"146","endLine":1,"endColumn":40},{"ruleId":"152","severity":1,"message":"167","line":44,"column":21,"nodeType":"154","endLine":44,"endColumn":24},{"ruleId":"143","severity":1,"message":"168","line":1,"column":30,"nodeType":"145","messageId":"146","endLine":1,"endColumn":35},{"ruleId":"143","severity":1,"message":"169","line":5,"column":17,"nodeType":"145","messageId":"146","endLine":5,"endColumn":28},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'LogContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'getCookie' is defined but never used.","'getView' is defined but never used.","'stringify' is defined but never used.","'cookies' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MapContainer' is defined but never used.","'AutoComplete' is defined but never used.","'Select' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createElement' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Space' is defined but never used.","'ColumnGroup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]